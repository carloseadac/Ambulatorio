/**
 * Angular wrapper for Bryntum Grid
 */
import { ElementRef, EventEmitter, SimpleChanges, OnDestroy, OnInit } from '@angular/core';
import { AlignSpec, Base, CellCopyPaste, CellCopyPasteConfig, CellEdit, CellEditConfig, CellMenu, CellMenuConfig, CellTooltip, CellTooltipConfig, ColumnAutoWidth, ColumnAutoWidthConfig, ColumnDragToolbar, ColumnDragToolbarConfig, ColumnPicker, ColumnPickerConfig, ColumnRename, ColumnRenameConfig, ColumnReorder, ColumnReorderConfig, ColumnResize, ColumnResizeConfig, ColumnStore, ColumnStoreConfig, ContainerItemConfig, ContainerLayoutConfig, FillHandle, FillHandleConfig, Filter, FilterBar, FilterBarConfig, FilterConfig, GridColumnConfig, GridExcelExporter, GridExcelExporterConfig, GridGroupSummary, GridGroupSummaryConfig, GridMultiPageExporter, GridMultiPageExporterConfig, GridMultiPageVerticalExporter, GridMultiPageVerticalExporterConfig, GridPdfExport, GridPdfExportConfig, GridSinglePageExporter, GridSinglePageExporterConfig, GridSummary, GridSummaryConfig, Group, GroupConfig, HeaderMenu, HeaderMenuConfig, Layout, Location, Mask, MaskConfig, MergeCells, MergeCellsConfig, Model, ModelConfig, PanelCollapserConfig, PanelCollapserOverlayConfig, PanelHeader, QuickFind, QuickFindConfig, Rectangle, RegionResize, RegionResizeConfig, RowCopyPaste, RowCopyPasteConfig, RowExpander, RowExpanderConfig, RowReorder, RowReorderConfig, ScrollManager, ScrollManagerConfig, Scroller, ScrollerConfig, Search, SearchConfig, Sort, SortConfig, StateProvider, StickyCells, StickyCellsConfig, Store, StoreConfig, Stripe, StripeConfig, SubGridConfig, TabConfig, Tool, ToolConfig, ToolbarConfig, TooltipConfig, Tree, TreeConfig, TreeGroup, TreeGroupConfig, Widget } from '@bryntum/calendar';
import { Grid } from '@bryntum/calendar';
import * as i0 from "@angular/core";
export declare class BryntumGridComponent implements OnInit, OnDestroy {
    static instanceClass: typeof Grid;
    static instanceName: string;
    private static bryntumEvents;
    private static bryntumFeatureNames;
    private static bryntumConfigs;
    private static bryntumConfigsOnly;
    private static bryntumProps;
    private elementRef;
    instance: Grid;
    private bryntumConfig;
    constructor(element: ElementRef);
    adopt: HTMLElement | string;
    align: AlignSpec | string;
    allowOver: boolean;
    anchor: boolean;
    anchorToTarget: boolean;
    animateRemovingRows: boolean;
    ariaDescription: string;
    ariaLabel: string;
    autoClose: boolean;
    autoHeight: boolean;
    autoShow: boolean;
    autoUpdateRecord: boolean;
    bbar: (Partial<ContainerItemConfig> | string)[] | Partial<ToolbarConfig>;
    bodyCls: string | object;
    bubbleEvents: object;
    callOnFunctions: boolean;
    centered: boolean;
    closable: boolean;
    closeAction: 'hide' | 'destroy';
    collapsed: boolean;
    collapsible: boolean | Partial<PanelCollapserConfig> | Partial<PanelCollapserOverlayConfig>;
    columns: ColumnStore | Partial<GridColumnConfig>[] | Partial<ColumnStoreConfig>;
    config: object;
    constrainTo: HTMLElement | Widget | Rectangle;
    contentElementCls: string | object;
    contextMenuTriggerEvent: 'contextmenu' | 'click' | 'dblclick';
    defaultBindProperty: string;
    defaultFocus: Function;
    defaultRegion: string;
    defaults: object;
    destroyStore: boolean;
    disableGridRowModelWarning: boolean;
    dismissDelay: number;
    dock: 'top' | 'bottom' | 'left' | 'right' | 'start' | 'end' | 'header' | 'pre-header' | object;
    draggable: boolean | object;
    enableSticky: boolean;
    enableTextSelection: boolean;
    features: object;
    fillLastColumn: boolean;
    fixedRowHeight: boolean;
    floating: boolean;
    focusOnToFront: boolean;
    footer: object | string;
    forElement: HTMLElement;
    forSelector: string;
    fullRowRefresh: boolean;
    getHtml: Function | string;
    getRowHeight: Function;
    header: string | boolean | PanelHeader;
    hideAnimation: boolean | object;
    hideDelay: number;
    hideHeaders: boolean;
    hideOnDelegateChange: boolean;
    hideWhenEmpty: boolean;
    hoverDelay: number;
    htmlCls: string | object;
    ignoreParentReadOnly: boolean;
    itemCls: string;
    keyMap: Record<string, string>;
    lazyItems: Record<string, Partial<ContainerItemConfig>> | Partial<ContainerItemConfig>[] | Widget[];
    listeners: object;
    loadingMsg: string;
    loadMask: string | Partial<MaskConfig> | null;
    loadMaskDefaults: Partial<MaskConfig> | Mask;
    loadMaskError: Partial<MaskConfig> | Mask | boolean;
    localeClass: typeof Base;
    localizable: boolean;
    localizableProperties: string[];
    maskDefaults: Partial<MaskConfig>;
    masked: boolean | string | Partial<MaskConfig>;
    maximizable: boolean;
    maximized: boolean;
    modal: boolean;
    monitorResize: boolean;
    mouseOffsetX: number;
    mouseOffsetY: number;
    namedItems: Record<string, Partial<ContainerItemConfig>>;
    owner: Widget;
    plugins: Function[];
    positioned: boolean;
    preserveFocusOnDatasetChange: boolean;
    preserveScrollOnDatasetChange: boolean;
    preventTooltipOnTouch: boolean;
    relayStoreEvents: boolean;
    resizeToFitIncludesHeader: boolean;
    responsiveLevels: Record<string, number | string>;
    ripple: boolean | object;
    rootElement: ShadowRoot;
    scrollAction: 'hide' | 'realign' | null;
    scrollerClass: typeof Scroller;
    scrollManager: Partial<ScrollManagerConfig> | ScrollManager;
    selectionMode: object;
    showAnimation: boolean | object;
    showDirty: boolean;
    showOnClick: boolean;
    showOnHover: boolean;
    showTooltipWhenDisabled: boolean;
    stateful: boolean | object | string[];
    statefulEvents: object | string[];
    stateId: string;
    stateProvider: StateProvider;
    strips: Record<string, Partial<ContainerItemConfig>>;
    subGridConfigs: Record<string, Partial<SubGridConfig>>;
    syncMask: string | Partial<MaskConfig> | null;
    tab: boolean | Partial<TabConfig>;
    tag: string;
    tbar: (Partial<ContainerItemConfig> | string)[] | Partial<ToolbarConfig>;
    textAlign: 'left' | 'center' | 'right' | 'start' | 'end';
    textContent: boolean;
    trackMouse: boolean;
    trapFocus: boolean;
    ui: string | object;
    weight: number;
    alignSelf: string;
    appendTo: HTMLElement | string;
    cls: string | object;
    columnLines: boolean;
    content: string;
    data: object[] | Model[] | Partial<ModelConfig>[];
    dataset: object;
    disabled: boolean;
    emptyText: string;
    enableUndoRedoKeys: boolean;
    extraData: string | number | boolean | object;
    flex: number | string;
    height: number | string;
    hidden: boolean;
    html: string | Function;
    id: string;
    insertBefore: HTMLElement | string;
    insertFirst: HTMLElement | string;
    items: Widget[] | Partial<ContainerItemConfig>[] | Record<string, Partial<ContainerItemConfig>> | Record<string, Partial<ContainerItemConfig> | boolean | null>;
    layout: Layout | string | Partial<ContainerLayoutConfig>;
    layoutStyle: object;
    longPressTime: number;
    margin: number | string;
    maxHeight: string | number;
    maxWidth: string | number;
    minHeight: string | number;
    minWidth: string | number;
    readOnly: boolean;
    record: Model;
    rowHeight: number;
    scrollable: Scroller | boolean | Partial<ScrollerConfig>;
    store: Store | Partial<StoreConfig>;
    strictRecordMapping: boolean;
    title: string;
    tools: Record<string, Tool | Partial<ToolConfig>> | Record<string, Tool> | Record<string, Partial<ToolConfig>>;
    tooltip: string | Partial<TooltipConfig>;
    transitionDuration: number;
    width: number | string;
    x: number;
    y: number;
    anchorSize: number[];
    isSettingValues: boolean;
    isValid: boolean;
    selectedCell: Location;
    selectedCells: Location[];
    selectedRecord: Model;
    selectedRecords: Model[] | number[];
    selectedRows: Model[] | number[];
    state: object;
    type: string;
    values: Record<string, object>;
    onBeforeCancelCellEdit: EventEmitter<object>;
    onBeforeCellDelete: EventEmitter<object>;
    onBeforeCellEditStart: EventEmitter<object>;
    onBeforeClose: EventEmitter<object>;
    onBeforeColumnDragStart: EventEmitter<object>;
    onBeforeColumnDropFinalize: EventEmitter<object>;
    onBeforeCopy: EventEmitter<object>;
    onBeforeDestroy: EventEmitter<object>;
    onBeforeFinishCellEdit: EventEmitter<object>;
    onBeforeHide: EventEmitter<object>;
    onBeforePaste: EventEmitter<object>;
    onBeforePdfExport: EventEmitter<object>;
    onBeforeRenderRow: EventEmitter<object>;
    onBeforeRenderRows: EventEmitter<object>;
    onBeforeSelectionChange: EventEmitter<object>;
    onBeforeSetRecord: EventEmitter<object>;
    onBeforeShow: EventEmitter<object>;
    onBeforeToggleGroup: EventEmitter<object>;
    onBeforeToggleNode: EventEmitter<object>;
    onCancelCellEdit: EventEmitter<object>;
    onCatchAll: EventEmitter<object>;
    onCellClick: EventEmitter<object>;
    onCellContextMenu: EventEmitter<object>;
    onCellDblClick: EventEmitter<object>;
    onCellMenuBeforeShow: EventEmitter<object>;
    onCellMenuItem: EventEmitter<object>;
    onCellMenuShow: EventEmitter<object>;
    onCellMenuToggleItem: EventEmitter<object>;
    onCellMouseOut: EventEmitter<object>;
    onCellMouseOver: EventEmitter<object>;
    onCollapseNode: EventEmitter<object>;
    onColumnDrag: EventEmitter<object>;
    onColumnDragStart: EventEmitter<object>;
    onColumnDrop: EventEmitter<object>;
    onContextMenuItem: EventEmitter<object>;
    onContextMenuToggleItem: EventEmitter<object>;
    onCopy: EventEmitter<object>;
    onDataChange: EventEmitter<object>;
    onDestroy: EventEmitter<object>;
    onDragSelecting: EventEmitter<object>;
    onExpandNode: EventEmitter<object>;
    onFinishCellEdit: EventEmitter<object>;
    onFocusIn: EventEmitter<object>;
    onFocusOut: EventEmitter<object>;
    onGridRowAbort: EventEmitter<object>;
    onGridRowBeforeDragStart: EventEmitter<object>;
    onGridRowBeforeDropFinalize: EventEmitter<object>;
    onGridRowDrag: EventEmitter<object>;
    onGridRowDragStart: EventEmitter<object>;
    onGridRowDrop: EventEmitter<object>;
    onHeaderMenuBeforeShow: EventEmitter<object>;
    onHeaderMenuItem: EventEmitter<object>;
    onHeaderMenuShow: EventEmitter<object>;
    onHeaderMenuToggleItem: EventEmitter<object>;
    onHide: EventEmitter<object>;
    onMouseOut: EventEmitter<object>;
    onMouseOver: EventEmitter<object>;
    onPaint: EventEmitter<object>;
    onPaste: EventEmitter<object>;
    onPdfExport: EventEmitter<object>;
    onPointerOver: EventEmitter<object>;
    onReadOnly: EventEmitter<object>;
    onRecompose: EventEmitter<object>;
    onRenderRow: EventEmitter<object>;
    onRenderRows: EventEmitter<object>;
    onResize: EventEmitter<object>;
    onResponsive: EventEmitter<object>;
    onScroll: EventEmitter<object>;
    onSelectionChange: EventEmitter<object>;
    onSelectionModeChange: EventEmitter<object>;
    onShow: EventEmitter<object>;
    onStartCellEdit: EventEmitter<object>;
    onSubGridCollapse: EventEmitter<object>;
    onSubGridExpand: EventEmitter<object>;
    onToggleGroup: EventEmitter<object>;
    onToggleNode: EventEmitter<object>;
    onToolClick: EventEmitter<object>;
    cellCopyPasteFeature: object | boolean | string | CellCopyPaste | Partial<CellCopyPasteConfig>;
    cellEditFeature: object | boolean | string | CellEdit | Partial<CellEditConfig>;
    cellMenuFeature: object | boolean | string | CellMenu | Partial<CellMenuConfig>;
    cellTooltipFeature: object | boolean | string | CellTooltip | Partial<CellTooltipConfig>;
    columnAutoWidthFeature: object | boolean | string | ColumnAutoWidth | Partial<ColumnAutoWidthConfig>;
    columnDragToolbarFeature: object | boolean | string | ColumnDragToolbar | Partial<ColumnDragToolbarConfig>;
    columnPickerFeature: object | boolean | string | ColumnPicker | Partial<ColumnPickerConfig>;
    columnRenameFeature: object | boolean | string | ColumnRename | Partial<ColumnRenameConfig>;
    columnReorderFeature: object | boolean | string | ColumnReorder | Partial<ColumnReorderConfig>;
    columnResizeFeature: object | boolean | string | ColumnResize | Partial<ColumnResizeConfig>;
    excelExporterFeature: object | boolean | string | GridExcelExporter | Partial<GridExcelExporterConfig>;
    fillHandleFeature: object | boolean | string | FillHandle | Partial<FillHandleConfig>;
    filterFeature: object | boolean | string | Filter | Partial<FilterConfig>;
    filterBarFeature: object | boolean | string | FilterBar | Partial<FilterBarConfig>;
    groupFeature: object | boolean | string | Group | Partial<GroupConfig>;
    groupSummaryFeature: object | boolean | string | GridGroupSummary | Partial<GridGroupSummaryConfig>;
    headerMenuFeature: object | boolean | string | HeaderMenu | Partial<HeaderMenuConfig>;
    mergeCellsFeature: object | boolean | string | MergeCells | Partial<MergeCellsConfig>;
    multipageFeature: object | boolean | string | GridMultiPageExporter | Partial<GridMultiPageExporterConfig>;
    multipageverticalFeature: object | boolean | string | GridMultiPageVerticalExporter | Partial<GridMultiPageVerticalExporterConfig>;
    pdfExportFeature: object | boolean | string | GridPdfExport | Partial<GridPdfExportConfig>;
    quickFindFeature: object | boolean | string | QuickFind | Partial<QuickFindConfig>;
    regionResizeFeature: object | boolean | string | RegionResize | Partial<RegionResizeConfig>;
    rowCopyPasteFeature: object | boolean | string | RowCopyPaste | Partial<RowCopyPasteConfig>;
    rowExpanderFeature: object | boolean | string | RowExpander | Partial<RowExpanderConfig>;
    rowReorderFeature: object | boolean | string | RowReorder | Partial<RowReorderConfig>;
    searchFeature: object | boolean | string | Search | Partial<SearchConfig>;
    singlepageFeature: object | boolean | string | GridSinglePageExporter | Partial<GridSinglePageExporterConfig>;
    sortFeature: object | boolean | string | Sort | Partial<SortConfig>;
    stickyCellsFeature: object | boolean | string | StickyCells | Partial<StickyCellsConfig>;
    stripeFeature: object | boolean | string | Stripe | Partial<StripeConfig>;
    summaryFeature: object | boolean | string | GridSummary | Partial<GridSummaryConfig>;
    treeFeature: object | boolean | string | Tree | Partial<TreeConfig>;
    treeGroupFeature: object | boolean | string | TreeGroup | Partial<TreeGroupConfig>;
    /**
     * Create and append the underlying widget
     */
    ngOnInit(): void;
    /**
     * Watch for changes
     * @param changes
     */
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * Destroy the component
     */
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BryntumGridComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<BryntumGridComponent, "bryntum-grid", never, { "adopt": "adopt"; "align": "align"; "allowOver": "allowOver"; "anchor": "anchor"; "anchorToTarget": "anchorToTarget"; "animateRemovingRows": "animateRemovingRows"; "ariaDescription": "ariaDescription"; "ariaLabel": "ariaLabel"; "autoClose": "autoClose"; "autoHeight": "autoHeight"; "autoShow": "autoShow"; "autoUpdateRecord": "autoUpdateRecord"; "bbar": "bbar"; "bodyCls": "bodyCls"; "bubbleEvents": "bubbleEvents"; "callOnFunctions": "callOnFunctions"; "centered": "centered"; "closable": "closable"; "closeAction": "closeAction"; "collapsed": "collapsed"; "collapsible": "collapsible"; "columns": "columns"; "config": "config"; "constrainTo": "constrainTo"; "contentElementCls": "contentElementCls"; "contextMenuTriggerEvent": "contextMenuTriggerEvent"; "defaultBindProperty": "defaultBindProperty"; "defaultFocus": "defaultFocus"; "defaultRegion": "defaultRegion"; "defaults": "defaults"; "destroyStore": "destroyStore"; "disableGridRowModelWarning": "disableGridRowModelWarning"; "dismissDelay": "dismissDelay"; "dock": "dock"; "draggable": "draggable"; "enableSticky": "enableSticky"; "enableTextSelection": "enableTextSelection"; "features": "features"; "fillLastColumn": "fillLastColumn"; "fixedRowHeight": "fixedRowHeight"; "floating": "floating"; "focusOnToFront": "focusOnToFront"; "footer": "footer"; "forElement": "forElement"; "forSelector": "forSelector"; "fullRowRefresh": "fullRowRefresh"; "getHtml": "getHtml"; "getRowHeight": "getRowHeight"; "header": "header"; "hideAnimation": "hideAnimation"; "hideDelay": "hideDelay"; "hideHeaders": "hideHeaders"; "hideOnDelegateChange": "hideOnDelegateChange"; "hideWhenEmpty": "hideWhenEmpty"; "hoverDelay": "hoverDelay"; "htmlCls": "htmlCls"; "ignoreParentReadOnly": "ignoreParentReadOnly"; "itemCls": "itemCls"; "keyMap": "keyMap"; "lazyItems": "lazyItems"; "listeners": "listeners"; "loadingMsg": "loadingMsg"; "loadMask": "loadMask"; "loadMaskDefaults": "loadMaskDefaults"; "loadMaskError": "loadMaskError"; "localeClass": "localeClass"; "localizable": "localizable"; "localizableProperties": "localizableProperties"; "maskDefaults": "maskDefaults"; "masked": "masked"; "maximizable": "maximizable"; "maximized": "maximized"; "modal": "modal"; "monitorResize": "monitorResize"; "mouseOffsetX": "mouseOffsetX"; "mouseOffsetY": "mouseOffsetY"; "namedItems": "namedItems"; "owner": "owner"; "plugins": "plugins"; "positioned": "positioned"; "preserveFocusOnDatasetChange": "preserveFocusOnDatasetChange"; "preserveScrollOnDatasetChange": "preserveScrollOnDatasetChange"; "preventTooltipOnTouch": "preventTooltipOnTouch"; "relayStoreEvents": "relayStoreEvents"; "resizeToFitIncludesHeader": "resizeToFitIncludesHeader"; "responsiveLevels": "responsiveLevels"; "ripple": "ripple"; "rootElement": "rootElement"; "scrollAction": "scrollAction"; "scrollerClass": "scrollerClass"; "scrollManager": "scrollManager"; "selectionMode": "selectionMode"; "showAnimation": "showAnimation"; "showDirty": "showDirty"; "showOnClick": "showOnClick"; "showOnHover": "showOnHover"; "showTooltipWhenDisabled": "showTooltipWhenDisabled"; "stateful": "stateful"; "statefulEvents": "statefulEvents"; "stateId": "stateId"; "stateProvider": "stateProvider"; "strips": "strips"; "subGridConfigs": "subGridConfigs"; "syncMask": "syncMask"; "tab": "tab"; "tag": "tag"; "tbar": "tbar"; "textAlign": "textAlign"; "textContent": "textContent"; "trackMouse": "trackMouse"; "trapFocus": "trapFocus"; "ui": "ui"; "weight": "weight"; "alignSelf": "alignSelf"; "appendTo": "appendTo"; "cls": "cls"; "columnLines": "columnLines"; "content": "content"; "data": "data"; "dataset": "dataset"; "disabled": "disabled"; "emptyText": "emptyText"; "enableUndoRedoKeys": "enableUndoRedoKeys"; "extraData": "extraData"; "flex": "flex"; "height": "height"; "hidden": "hidden"; "html": "html"; "id": "id"; "insertBefore": "insertBefore"; "insertFirst": "insertFirst"; "items": "items"; "layout": "layout"; "layoutStyle": "layoutStyle"; "longPressTime": "longPressTime"; "margin": "margin"; "maxHeight": "maxHeight"; "maxWidth": "maxWidth"; "minHeight": "minHeight"; "minWidth": "minWidth"; "readOnly": "readOnly"; "record": "record"; "rowHeight": "rowHeight"; "scrollable": "scrollable"; "store": "store"; "strictRecordMapping": "strictRecordMapping"; "title": "title"; "tools": "tools"; "tooltip": "tooltip"; "transitionDuration": "transitionDuration"; "width": "width"; "x": "x"; "y": "y"; "anchorSize": "anchorSize"; "isSettingValues": "isSettingValues"; "isValid": "isValid"; "selectedCell": "selectedCell"; "selectedCells": "selectedCells"; "selectedRecord": "selectedRecord"; "selectedRecords": "selectedRecords"; "selectedRows": "selectedRows"; "state": "state"; "type": "type"; "values": "values"; "cellCopyPasteFeature": "cellCopyPasteFeature"; "cellEditFeature": "cellEditFeature"; "cellMenuFeature": "cellMenuFeature"; "cellTooltipFeature": "cellTooltipFeature"; "columnAutoWidthFeature": "columnAutoWidthFeature"; "columnDragToolbarFeature": "columnDragToolbarFeature"; "columnPickerFeature": "columnPickerFeature"; "columnRenameFeature": "columnRenameFeature"; "columnReorderFeature": "columnReorderFeature"; "columnResizeFeature": "columnResizeFeature"; "excelExporterFeature": "excelExporterFeature"; "fillHandleFeature": "fillHandleFeature"; "filterFeature": "filterFeature"; "filterBarFeature": "filterBarFeature"; "groupFeature": "groupFeature"; "groupSummaryFeature": "groupSummaryFeature"; "headerMenuFeature": "headerMenuFeature"; "mergeCellsFeature": "mergeCellsFeature"; "multipageFeature": "multipageFeature"; "multipageverticalFeature": "multipageverticalFeature"; "pdfExportFeature": "pdfExportFeature"; "quickFindFeature": "quickFindFeature"; "regionResizeFeature": "regionResizeFeature"; "rowCopyPasteFeature": "rowCopyPasteFeature"; "rowExpanderFeature": "rowExpanderFeature"; "rowReorderFeature": "rowReorderFeature"; "searchFeature": "searchFeature"; "singlepageFeature": "singlepageFeature"; "sortFeature": "sortFeature"; "stickyCellsFeature": "stickyCellsFeature"; "stripeFeature": "stripeFeature"; "summaryFeature": "summaryFeature"; "treeFeature": "treeFeature"; "treeGroupFeature": "treeGroupFeature"; }, { "onBeforeCancelCellEdit": "onBeforeCancelCellEdit"; "onBeforeCellDelete": "onBeforeCellDelete"; "onBeforeCellEditStart": "onBeforeCellEditStart"; "onBeforeClose": "onBeforeClose"; "onBeforeColumnDragStart": "onBeforeColumnDragStart"; "onBeforeColumnDropFinalize": "onBeforeColumnDropFinalize"; "onBeforeCopy": "onBeforeCopy"; "onBeforeDestroy": "onBeforeDestroy"; "onBeforeFinishCellEdit": "onBeforeFinishCellEdit"; "onBeforeHide": "onBeforeHide"; "onBeforePaste": "onBeforePaste"; "onBeforePdfExport": "onBeforePdfExport"; "onBeforeRenderRow": "onBeforeRenderRow"; "onBeforeRenderRows": "onBeforeRenderRows"; "onBeforeSelectionChange": "onBeforeSelectionChange"; "onBeforeSetRecord": "onBeforeSetRecord"; "onBeforeShow": "onBeforeShow"; "onBeforeToggleGroup": "onBeforeToggleGroup"; "onBeforeToggleNode": "onBeforeToggleNode"; "onCancelCellEdit": "onCancelCellEdit"; "onCatchAll": "onCatchAll"; "onCellClick": "onCellClick"; "onCellContextMenu": "onCellContextMenu"; "onCellDblClick": "onCellDblClick"; "onCellMenuBeforeShow": "onCellMenuBeforeShow"; "onCellMenuItem": "onCellMenuItem"; "onCellMenuShow": "onCellMenuShow"; "onCellMenuToggleItem": "onCellMenuToggleItem"; "onCellMouseOut": "onCellMouseOut"; "onCellMouseOver": "onCellMouseOver"; "onCollapseNode": "onCollapseNode"; "onColumnDrag": "onColumnDrag"; "onColumnDragStart": "onColumnDragStart"; "onColumnDrop": "onColumnDrop"; "onContextMenuItem": "onContextMenuItem"; "onContextMenuToggleItem": "onContextMenuToggleItem"; "onCopy": "onCopy"; "onDataChange": "onDataChange"; "onDestroy": "onDestroy"; "onDragSelecting": "onDragSelecting"; "onExpandNode": "onExpandNode"; "onFinishCellEdit": "onFinishCellEdit"; "onFocusIn": "onFocusIn"; "onFocusOut": "onFocusOut"; "onGridRowAbort": "onGridRowAbort"; "onGridRowBeforeDragStart": "onGridRowBeforeDragStart"; "onGridRowBeforeDropFinalize": "onGridRowBeforeDropFinalize"; "onGridRowDrag": "onGridRowDrag"; "onGridRowDragStart": "onGridRowDragStart"; "onGridRowDrop": "onGridRowDrop"; "onHeaderMenuBeforeShow": "onHeaderMenuBeforeShow"; "onHeaderMenuItem": "onHeaderMenuItem"; "onHeaderMenuShow": "onHeaderMenuShow"; "onHeaderMenuToggleItem": "onHeaderMenuToggleItem"; "onHide": "onHide"; "onMouseOut": "onMouseOut"; "onMouseOver": "onMouseOver"; "onPaint": "onPaint"; "onPaste": "onPaste"; "onPdfExport": "onPdfExport"; "onPointerOver": "onPointerOver"; "onReadOnly": "onReadOnly"; "onRecompose": "onRecompose"; "onRenderRow": "onRenderRow"; "onRenderRows": "onRenderRows"; "onResize": "onResize"; "onResponsive": "onResponsive"; "onScroll": "onScroll"; "onSelectionChange": "onSelectionChange"; "onSelectionModeChange": "onSelectionModeChange"; "onShow": "onShow"; "onStartCellEdit": "onStartCellEdit"; "onSubGridCollapse": "onSubGridCollapse"; "onSubGridExpand": "onSubGridExpand"; "onToggleGroup": "onToggleGroup"; "onToggleNode": "onToggleNode"; "onToolClick": "onToolClick"; }, never, never>;
}
