/**
 * Angular wrapper for Bryntum ResourceView
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
import WrapperHelper from './wrapper.helper';
import { ResourceView, WidgetHelper } from '@bryntum/calendar';
import * as i0 from "@angular/core";
export class BryntumResourceViewComponent {
    constructor(element) {
        this.bryntumConfig = {
            adopt: undefined,
            appendTo: undefined,
            href: undefined,
            angularComponent: this,
            features: {},
            listeners: {}
        };
        // Events
        this.onBeforeAutoCreate = new EventEmitter();
        this.onBeforeChangeDate = new EventEmitter();
        this.onBeforeDestroy = new EventEmitter();
        this.onBeforeHide = new EventEmitter();
        this.onBeforeResponsiveStateChange = new EventEmitter();
        this.onBeforeSetRecord = new EventEmitter();
        this.onBeforeShow = new EventEmitter();
        this.onCatchAll = new EventEmitter();
        this.onDestroy = new EventEmitter();
        this.onEventAutoCreated = new EventEmitter();
        this.onFocusIn = new EventEmitter();
        this.onFocusOut = new EventEmitter();
        this.onHide = new EventEmitter();
        this.onPaint = new EventEmitter();
        this.onReadOnly = new EventEmitter();
        this.onRecompose = new EventEmitter();
        this.onRefresh = new EventEmitter();
        this.onResize = new EventEmitter();
        this.onResponsiveHeightChange = new EventEmitter();
        this.onResponsiveStateChange = new EventEmitter();
        this.onResponsiveWidthChange = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onToolClick = new EventEmitter();
        this.onViewCreate = new EventEmitter();
        this.elementRef = element;
    }
    /**
     * Create and append the underlying widget
     */
    ngOnInit() {
        const me = this, { elementRef, bryntumConfig } = me, { instanceClass, instanceName, bryntumConfigs, bryntumEvents } = BryntumResourceViewComponent;
        bryntumConfigs.filter(prop => prop in this).forEach(prop => {
            // @ts-ignore
            WrapperHelper.applyPropValue(bryntumConfig, prop, this[prop]);
            if (['features', 'config'].includes(prop)) {
                WrapperHelper.devWarningConfigProp(instanceName, prop);
            }
        });
        // @ts-ignore
        bryntumEvents.filter(event => this[event] && this[event].observers.length > 0).forEach(event => {
            const uncapitalize = (str) => str.charAt(0).toLowerCase() + str.slice(1), eventName = (str) => uncapitalize(str.slice(2));
            // @ts-ignore
            bryntumConfig.listeners[eventName(event)] = e => {
                // @ts-ignore
                me[event].emit(e);
                // EventEmitter does not return values in the normal way, work around it by setting `returnValue` flag
                // in Angular listeners
                return e.returnValue;
            };
        });
        // If component has no container specified in config then use adopt to Wrapper's element
        const containerParam = [
            'adopt',
            'appendTo',
            'insertAfter',
            'insertBefore'
            // @ts-ignore
        ].find(prop => bryntumConfig[prop]);
        if (!containerParam) {
            if (instanceName === 'Button') {
                // Button should always be <a> or <button> inside owner element
                bryntumConfig.appendTo = elementRef.nativeElement;
            }
            else {
                bryntumConfig.adopt = elementRef.nativeElement;
            }
        }
        else {
            WrapperHelper.devWarningContainer(instanceName, containerParam);
        }
        // @ts-ignore
        me.instance = instanceName === 'Widget' ? WidgetHelper.createWidget(bryntumConfig) : new instanceClass(bryntumConfig);
    }
    /**
     * Watch for changes
     * @param changes
     */
    ngOnChanges(changes) {
        const { instance } = this, { instanceName } = BryntumResourceViewComponent;
        if (!instance) {
            return;
        }
        // Iterate over all changes
        Object.entries(changes).forEach(([prop, change]) => {
            const newValue = change.currentValue, { instance } = this, { bryntumConfigsOnly, bryntumProps } = BryntumResourceViewComponent;
            if (bryntumProps.includes(prop)) {
                WrapperHelper.applyPropValue(instance, prop, newValue, false);
                if (bryntumConfigsOnly.includes(prop)) {
                    WrapperHelper.devWarningUpdateProp(instanceName, prop);
                }
            }
        });
    }
    /**
     * Destroy the component
     */
    ngOnDestroy() {
        // @ts-ignore
        this.instance && this.instance.destroy && this.instance.destroy();
    }
}
BryntumResourceViewComponent.instanceClass = ResourceView;
BryntumResourceViewComponent.instanceName = 'ResourceView';
BryntumResourceViewComponent.bryntumEvents = [
    'onBeforeAutoCreate',
    'onBeforeChangeDate',
    'onBeforeDestroy',
    'onBeforeHide',
    'onBeforeResponsiveStateChange',
    'onBeforeSetRecord',
    'onBeforeShow',
    'onCatchAll',
    'onDestroy',
    'onEventAutoCreated',
    'onFocusIn',
    'onFocusOut',
    'onHide',
    'onPaint',
    'onRecompose',
    'onRefresh',
    'onResize',
    'onResponsiveHeightChange',
    'onResponsiveStateChange',
    'onResponsiveWidthChange',
    'onShow',
    'onToolClick',
    'onViewCreate'
];
BryntumResourceViewComponent.bryntumFeatureNames = [];
BryntumResourceViewComponent.bryntumConfigs = BryntumResourceViewComponent.bryntumFeatureNames.concat([
    'adopt',
    'align',
    'alignSelf',
    'anchor',
    'animateTimeShift',
    'appendTo',
    'ariaDescription',
    'ariaLabel',
    'autoCreate',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'breakpoints',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'cls',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'content',
    'contentElementCls',
    'dataset',
    'dateFormat',
    'dateSeparator',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'descriptionFormat',
    'descriptionRenderer',
    'disabled',
    'dock',
    'draggable',
    'eventHeight',
    'eventSorter',
    'extraData',
    'flex',
    'floating',
    'footer',
    'header',
    'height',
    'hidden',
    'hideAnimation',
    'hideNonWorkingDays',
    'hideWhenEmpty',
    'html',
    'htmlCls',
    'id',
    'ignoreParentReadOnly',
    'includeTimeRanges',
    'insertBefore',
    'insertFirst',
    'itemCls',
    'items',
    'layout',
    'layoutStyle',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'margin',
    'maskDefaults',
    'masked',
    'maxDate',
    'maxHeight',
    'maxWidth',
    'meta',
    'minDate',
    'minHeight',
    'minWidth',
    'monitorResize',
    'namedItems',
    'nonWorkingDays',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'readOnly',
    'record',
    'relayStoreEvents',
    'resourceImagePath',
    'resourceWidth',
    'responsive',
    'responsiveRoot',
    'responsiveState',
    'responsiveTarget',
    'ripple',
    'rootElement',
    'scrollable',
    'scrollAction',
    'shortDateFormat',
    'shortDateTimeFormat',
    'shortEventCls',
    'shortEventDuration',
    'showAnimation',
    'showAvatars',
    'showResourceAvatars',
    'showTooltipWhenDisabled',
    'stableResourceOrder',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strictRecordMapping',
    'strips',
    'syncViewDate',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'timeFormat',
    'title',
    'tools',
    'tooltip',
    'trapFocus',
    'ui',
    'view',
    'weekStartDay',
    'weight',
    'width',
    'x',
    'y'
]);
BryntumResourceViewComponent.bryntumConfigsOnly = [
    'adopt',
    'align',
    'anchor',
    'ariaDescription',
    'ariaLabel',
    'autoCreate',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'breakpoints',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'contentElementCls',
    'dateFormat',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'descriptionRenderer',
    'dock',
    'draggable',
    'eventHeight',
    'eventSorter',
    'floating',
    'footer',
    'header',
    'hideAnimation',
    'hideWhenEmpty',
    'htmlCls',
    'ignoreParentReadOnly',
    'includeTimeRanges',
    'itemCls',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'maskDefaults',
    'masked',
    'meta',
    'monitorResize',
    'namedItems',
    'nonWorkingDays',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'relayStoreEvents',
    'resourceImagePath',
    'responsive',
    'responsiveRoot',
    'responsiveState',
    'responsiveTarget',
    'ripple',
    'rootElement',
    'scrollAction',
    'shortDateFormat',
    'shortDateTimeFormat',
    'shortEventCls',
    'shortEventDuration',
    'showAnimation',
    'showAvatars',
    'showResourceAvatars',
    'showTooltipWhenDisabled',
    'stableResourceOrder',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strips',
    'syncViewDate',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'timeFormat',
    'trapFocus',
    'ui',
    'weekStartDay',
    'weight'
];
BryntumResourceViewComponent.bryntumProps = BryntumResourceViewComponent.bryntumFeatureNames.concat([
    'alignSelf',
    'anchorSize',
    'animateTimeShift',
    'appendTo',
    'cls',
    'content',
    'dataset',
    'dateSeparator',
    'dayCellCls',
    'descriptionFormat',
    'disabled',
    'extraData',
    'firstVisibleCell',
    'firstVisibleDate',
    'flex',
    'height',
    'hidden',
    'hideNonWorkingDays',
    'html',
    'id',
    'insertBefore',
    'insertFirst',
    'isSettingValues',
    'isValid',
    'items',
    'lastVisibleCell',
    'lastVisibleDate',
    'layout',
    'layoutStyle',
    'margin',
    'maxDate',
    'maxHeight',
    'maxWidth',
    'minDate',
    'minHeight',
    'minWidth',
    'readOnly',
    'record',
    'resourceWidth',
    'scrollable',
    'state',
    'strictRecordMapping',
    'title',
    'tools',
    'tooltip',
    'type',
    'values',
    'view',
    'width',
    'x',
    'y'
]);
BryntumResourceViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumResourceViewComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
BryntumResourceViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.0", type: BryntumResourceViewComponent, selector: "bryntum-resource-view", inputs: { adopt: "adopt", align: "align", anchor: "anchor", ariaDescription: "ariaDescription", ariaLabel: "ariaLabel", autoCreate: "autoCreate", autoUpdateRecord: "autoUpdateRecord", bbar: "bbar", bodyCls: "bodyCls", breakpoints: "breakpoints", bubbleEvents: "bubbleEvents", callOnFunctions: "callOnFunctions", centered: "centered", collapsed: "collapsed", collapsible: "collapsible", config: "config", constrainTo: "constrainTo", contentElementCls: "contentElementCls", dateFormat: "dateFormat", defaultBindProperty: "defaultBindProperty", defaultFocus: "defaultFocus", defaults: "defaults", descriptionRenderer: "descriptionRenderer", dock: "dock", draggable: "draggable", eventHeight: "eventHeight", eventSorter: "eventSorter", floating: "floating", footer: "footer", header: "header", hideAnimation: "hideAnimation", hideWhenEmpty: "hideWhenEmpty", htmlCls: "htmlCls", ignoreParentReadOnly: "ignoreParentReadOnly", includeTimeRanges: "includeTimeRanges", itemCls: "itemCls", lazyItems: "lazyItems", listeners: "listeners", localeClass: "localeClass", localizable: "localizable", localizableProperties: "localizableProperties", maskDefaults: "maskDefaults", masked: "masked", meta: "meta", monitorResize: "monitorResize", namedItems: "namedItems", nonWorkingDays: "nonWorkingDays", owner: "owner", positioned: "positioned", preventTooltipOnTouch: "preventTooltipOnTouch", relayStoreEvents: "relayStoreEvents", resourceImagePath: "resourceImagePath", responsive: "responsive", responsiveRoot: "responsiveRoot", responsiveState: "responsiveState", responsiveTarget: "responsiveTarget", ripple: "ripple", rootElement: "rootElement", scrollAction: "scrollAction", shortDateFormat: "shortDateFormat", shortDateTimeFormat: "shortDateTimeFormat", shortEventCls: "shortEventCls", shortEventDuration: "shortEventDuration", showAnimation: "showAnimation", showAvatars: "showAvatars", showResourceAvatars: "showResourceAvatars", showTooltipWhenDisabled: "showTooltipWhenDisabled", stableResourceOrder: "stableResourceOrder", stateful: "stateful", statefulEvents: "statefulEvents", stateId: "stateId", stateProvider: "stateProvider", strips: "strips", syncViewDate: "syncViewDate", tab: "tab", tag: "tag", tbar: "tbar", textAlign: "textAlign", textContent: "textContent", timeFormat: "timeFormat", trapFocus: "trapFocus", ui: "ui", weekStartDay: "weekStartDay", weight: "weight", alignSelf: "alignSelf", animateTimeShift: "animateTimeShift", appendTo: "appendTo", cls: "cls", content: "content", dataset: "dataset", dateSeparator: "dateSeparator", descriptionFormat: "descriptionFormat", disabled: "disabled", extraData: "extraData", flex: "flex", height: "height", hidden: "hidden", hideNonWorkingDays: "hideNonWorkingDays", html: "html", id: "id", insertBefore: "insertBefore", insertFirst: "insertFirst", items: "items", layout: "layout", layoutStyle: "layoutStyle", margin: "margin", maxDate: "maxDate", maxHeight: "maxHeight", maxWidth: "maxWidth", minDate: "minDate", minHeight: "minHeight", minWidth: "minWidth", readOnly: "readOnly", record: "record", resourceWidth: "resourceWidth", scrollable: "scrollable", strictRecordMapping: "strictRecordMapping", title: "title", tools: "tools", tooltip: "tooltip", view: "view", width: "width", x: "x", y: "y", anchorSize: "anchorSize", dayCellCls: "dayCellCls", firstVisibleCell: "firstVisibleCell", firstVisibleDate: "firstVisibleDate", isSettingValues: "isSettingValues", isValid: "isValid", lastVisibleCell: "lastVisibleCell", lastVisibleDate: "lastVisibleDate", state: "state", type: "type", values: "values" }, outputs: { onBeforeAutoCreate: "onBeforeAutoCreate", onBeforeChangeDate: "onBeforeChangeDate", onBeforeDestroy: "onBeforeDestroy", onBeforeHide: "onBeforeHide", onBeforeResponsiveStateChange: "onBeforeResponsiveStateChange", onBeforeSetRecord: "onBeforeSetRecord", onBeforeShow: "onBeforeShow", onCatchAll: "onCatchAll", onDestroy: "onDestroy", onEventAutoCreated: "onEventAutoCreated", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onHide: "onHide", onPaint: "onPaint", onReadOnly: "onReadOnly", onRecompose: "onRecompose", onRefresh: "onRefresh", onResize: "onResize", onResponsiveHeightChange: "onResponsiveHeightChange", onResponsiveStateChange: "onResponsiveStateChange", onResponsiveWidthChange: "onResponsiveWidthChange", onShow: "onShow", onToolClick: "onToolClick", onViewCreate: "onViewCreate" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumResourceViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bryntum-resource-view',
                    template: ''
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { adopt: [{
                type: Input
            }], align: [{
                type: Input
            }], anchor: [{
                type: Input
            }], ariaDescription: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], autoCreate: [{
                type: Input
            }], autoUpdateRecord: [{
                type: Input
            }], bbar: [{
                type: Input
            }], bodyCls: [{
                type: Input
            }], breakpoints: [{
                type: Input
            }], bubbleEvents: [{
                type: Input
            }], callOnFunctions: [{
                type: Input
            }], centered: [{
                type: Input
            }], collapsed: [{
                type: Input
            }], collapsible: [{
                type: Input
            }], config: [{
                type: Input
            }], constrainTo: [{
                type: Input
            }], contentElementCls: [{
                type: Input
            }], dateFormat: [{
                type: Input
            }], defaultBindProperty: [{
                type: Input
            }], defaultFocus: [{
                type: Input
            }], defaults: [{
                type: Input
            }], descriptionRenderer: [{
                type: Input
            }], dock: [{
                type: Input
            }], draggable: [{
                type: Input
            }], eventHeight: [{
                type: Input
            }], eventSorter: [{
                type: Input
            }], floating: [{
                type: Input
            }], footer: [{
                type: Input
            }], header: [{
                type: Input
            }], hideAnimation: [{
                type: Input
            }], hideWhenEmpty: [{
                type: Input
            }], htmlCls: [{
                type: Input
            }], ignoreParentReadOnly: [{
                type: Input
            }], includeTimeRanges: [{
                type: Input
            }], itemCls: [{
                type: Input
            }], lazyItems: [{
                type: Input
            }], listeners: [{
                type: Input
            }], localeClass: [{
                type: Input
            }], localizable: [{
                type: Input
            }], localizableProperties: [{
                type: Input
            }], maskDefaults: [{
                type: Input
            }], masked: [{
                type: Input
            }], meta: [{
                type: Input
            }], monitorResize: [{
                type: Input
            }], namedItems: [{
                type: Input
            }], nonWorkingDays: [{
                type: Input
            }], owner: [{
                type: Input
            }], positioned: [{
                type: Input
            }], preventTooltipOnTouch: [{
                type: Input
            }], relayStoreEvents: [{
                type: Input
            }], resourceImagePath: [{
                type: Input
            }], responsive: [{
                type: Input
            }], responsiveRoot: [{
                type: Input
            }], responsiveState: [{
                type: Input
            }], responsiveTarget: [{
                type: Input
            }], ripple: [{
                type: Input
            }], rootElement: [{
                type: Input
            }], scrollAction: [{
                type: Input
            }], shortDateFormat: [{
                type: Input
            }], shortDateTimeFormat: [{
                type: Input
            }], shortEventCls: [{
                type: Input
            }], shortEventDuration: [{
                type: Input
            }], showAnimation: [{
                type: Input
            }], showAvatars: [{
                type: Input
            }], showResourceAvatars: [{
                type: Input
            }], showTooltipWhenDisabled: [{
                type: Input
            }], stableResourceOrder: [{
                type: Input
            }], stateful: [{
                type: Input
            }], statefulEvents: [{
                type: Input
            }], stateId: [{
                type: Input
            }], stateProvider: [{
                type: Input
            }], strips: [{
                type: Input
            }], syncViewDate: [{
                type: Input
            }], tab: [{
                type: Input
            }], tag: [{
                type: Input
            }], tbar: [{
                type: Input
            }], textAlign: [{
                type: Input
            }], textContent: [{
                type: Input
            }], timeFormat: [{
                type: Input
            }], trapFocus: [{
                type: Input
            }], ui: [{
                type: Input
            }], weekStartDay: [{
                type: Input
            }], weight: [{
                type: Input
            }], alignSelf: [{
                type: Input
            }], animateTimeShift: [{
                type: Input
            }], appendTo: [{
                type: Input
            }], cls: [{
                type: Input
            }], content: [{
                type: Input
            }], dataset: [{
                type: Input
            }], dateSeparator: [{
                type: Input
            }], descriptionFormat: [{
                type: Input
            }], disabled: [{
                type: Input
            }], extraData: [{
                type: Input
            }], flex: [{
                type: Input
            }], height: [{
                type: Input
            }], hidden: [{
                type: Input
            }], hideNonWorkingDays: [{
                type: Input
            }], html: [{
                type: Input
            }], id: [{
                type: Input
            }], insertBefore: [{
                type: Input
            }], insertFirst: [{
                type: Input
            }], items: [{
                type: Input
            }], layout: [{
                type: Input
            }], layoutStyle: [{
                type: Input
            }], margin: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], minDate: [{
                type: Input
            }], minHeight: [{
                type: Input
            }], minWidth: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], record: [{
                type: Input
            }], resourceWidth: [{
                type: Input
            }], scrollable: [{
                type: Input
            }], strictRecordMapping: [{
                type: Input
            }], title: [{
                type: Input
            }], tools: [{
                type: Input
            }], tooltip: [{
                type: Input
            }], view: [{
                type: Input
            }], width: [{
                type: Input
            }], x: [{
                type: Input
            }], y: [{
                type: Input
            }], anchorSize: [{
                type: Input
            }], dayCellCls: [{
                type: Input
            }], firstVisibleCell: [{
                type: Input
            }], firstVisibleDate: [{
                type: Input
            }], isSettingValues: [{
                type: Input
            }], isValid: [{
                type: Input
            }], lastVisibleCell: [{
                type: Input
            }], lastVisibleDate: [{
                type: Input
            }], state: [{
                type: Input
            }], type: [{
                type: Input
            }], values: [{
                type: Input
            }], onBeforeAutoCreate: [{
                type: Output
            }], onBeforeChangeDate: [{
                type: Output
            }], onBeforeDestroy: [{
                type: Output
            }], onBeforeHide: [{
                type: Output
            }], onBeforeResponsiveStateChange: [{
                type: Output
            }], onBeforeSetRecord: [{
                type: Output
            }], onBeforeShow: [{
                type: Output
            }], onCatchAll: [{
                type: Output
            }], onDestroy: [{
                type: Output
            }], onEventAutoCreated: [{
                type: Output
            }], onFocusIn: [{
                type: Output
            }], onFocusOut: [{
                type: Output
            }], onHide: [{
                type: Output
            }], onPaint: [{
                type: Output
            }], onReadOnly: [{
                type: Output
            }], onRecompose: [{
                type: Output
            }], onRefresh: [{
                type: Output
            }], onResize: [{
                type: Output
            }], onResponsiveHeightChange: [{
                type: Output
            }], onResponsiveStateChange: [{
                type: Output
            }], onResponsiveWidthChange: [{
                type: Output
            }], onShow: [{
                type: Output
            }], onToolClick: [{
                type: Output
            }], onViewCreate: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,