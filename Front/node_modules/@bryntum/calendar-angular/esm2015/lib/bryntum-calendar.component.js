/**
 * Angular wrapper for Bryntum Calendar
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
import WrapperHelper from './wrapper.helper';
import { Calendar, StringHelper, WidgetHelper } from '@bryntum/calendar';
import * as i0 from "@angular/core";
export class BryntumCalendarComponent {
    constructor(element) {
        this.bryntumConfig = {
            adopt: undefined,
            appendTo: undefined,
            href: undefined,
            angularComponent: this,
            features: {},
            listeners: {}
        };
        // Events
        this.onActiveItemChange = new EventEmitter();
        this.onAfterEventEdit = new EventEmitter();
        this.onAfterEventSave = new EventEmitter();
        this.onAssignmentSelectionChange = new EventEmitter();
        this.onBeforeActiveItemChange = new EventEmitter();
        this.onBeforeAssignmentDelete = new EventEmitter();
        this.onBeforeAssignmentSelectionChange = new EventEmitter();
        this.onBeforeAutoCreate = new EventEmitter();
        this.onBeforeDestroy = new EventEmitter();
        this.onBeforeDragCreateEnd = new EventEmitter();
        this.onBeforeDragMoveEnd = new EventEmitter();
        this.onBeforeDragResizeEnd = new EventEmitter();
        this.onBeforeEventDelete = new EventEmitter();
        this.onBeforeEventEdit = new EventEmitter();
        this.onBeforeEventEditShow = new EventEmitter();
        this.onBeforeEventSave = new EventEmitter();
        this.onBeforeEventSelectionChange = new EventEmitter();
        this.onBeforeHide = new EventEmitter();
        this.onBeforePrint = new EventEmitter();
        this.onBeforeResponsiveStateChange = new EventEmitter();
        this.onBeforeSetRecord = new EventEmitter();
        this.onBeforeShow = new EventEmitter();
        this.onCatchAll = new EventEmitter();
        this.onCellOverflowClick = new EventEmitter();
        this.onContextMenuItem = new EventEmitter();
        this.onContextMenuToggleItem = new EventEmitter();
        this.onDataChange = new EventEmitter();
        this.onDateChange = new EventEmitter();
        this.onDateRangeChange = new EventEmitter();
        this.onDateRangeRequested = new EventEmitter();
        this.onDayNumberClick = new EventEmitter();
        this.onDestroy = new EventEmitter();
        this.onDragCreateEnd = new EventEmitter();
        this.onDragMoveEnd = new EventEmitter();
        this.onDragResizeEnd = new EventEmitter();
        this.onEmptyCellClick = new EventEmitter();
        this.onEventAutoCreated = new EventEmitter();
        this.onEventClick = new EventEmitter();
        this.onEventContextMenu = new EventEmitter();
        this.onEventDblClick = new EventEmitter();
        this.onEventEditBeforeSetRecord = new EventEmitter();
        this.onEventMenuBeforeShow = new EventEmitter();
        this.onEventMenuItem = new EventEmitter();
        this.onEventMenuShow = new EventEmitter();
        this.onEventMouseDown = new EventEmitter();
        this.onEventMouseOut = new EventEmitter();
        this.onEventMouseOver = new EventEmitter();
        this.onEventMouseUp = new EventEmitter();
        this.onEventPropagate = new EventEmitter();
        this.onEventSelectionChange = new EventEmitter();
        this.onFocusIn = new EventEmitter();
        this.onFocusOut = new EventEmitter();
        this.onHide = new EventEmitter();
        this.onLoadOnDemandFail = new EventEmitter();
        this.onMonthNameClick = new EventEmitter();
        this.onNavigate = new EventEmitter();
        this.onPaint = new EventEmitter();
        this.onReadOnly = new EventEmitter();
        this.onRecompose = new EventEmitter();
        this.onRefresh = new EventEmitter();
        this.onResize = new EventEmitter();
        this.onResponsiveHeightChange = new EventEmitter();
        this.onResponsiveStateChange = new EventEmitter();
        this.onResponsiveWidthChange = new EventEmitter();
        this.onScheduleClick = new EventEmitter();
        this.onScheduleContextMenu = new EventEmitter();
        this.onScheduleDblClick = new EventEmitter();
        this.onScheduleMenuBeforeShow = new EventEmitter();
        this.onScheduleMenuItem = new EventEmitter();
        this.onScheduleMenuShow = new EventEmitter();
        this.onScheduleMouseDown = new EventEmitter();
        this.onScheduleMouseOut = new EventEmitter();
        this.onScheduleMouseOver = new EventEmitter();
        this.onScheduleMouseUp = new EventEmitter();
        this.onSelectionChange = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onTimeRangeHeaderClick = new EventEmitter();
        this.onTimeRangeHeaderContextMenu = new EventEmitter();
        this.onTimeRangeHeaderDblClick = new EventEmitter();
        this.onToolClick = new EventEmitter();
        this.onViewPaint = new EventEmitter();
        this.onWeekNumberClick = new EventEmitter();
        this.elementRef = element;
    }
    /**
     * Create and append the underlying widget
     */
    ngOnInit() {
        const me = this, { elementRef, bryntumConfig } = me, { instanceClass, instanceName, bryntumConfigs, bryntumEvents } = BryntumCalendarComponent;
        bryntumConfigs.filter(prop => prop in this).forEach(prop => {
            // @ts-ignore
            WrapperHelper.applyPropValue(bryntumConfig, prop, this[prop]);
            if (['features', 'config'].includes(prop)) {
                WrapperHelper.devWarningConfigProp(instanceName, prop);
            }
        });
        // @ts-ignore
        bryntumEvents.filter(event => this[event] && this[event].observers.length > 0).forEach(event => {
            const uncapitalize = (str) => str.charAt(0).toLowerCase() + str.slice(1), eventName = (str) => uncapitalize(str.slice(2));
            // @ts-ignore
            bryntumConfig.listeners[eventName(event)] = e => {
                // @ts-ignore
                me[event].emit(e);
                // EventEmitter does not return values in the normal way, work around it by setting `returnValue` flag
                // in Angular listeners
                return e.returnValue;
            };
        });
        // If component has no container specified in config then use adopt to Wrapper's element
        const containerParam = [
            'adopt',
            'appendTo',
            'insertAfter',
            'insertBefore'
            // @ts-ignore
        ].find(prop => bryntumConfig[prop]);
        if (!containerParam) {
            if (instanceName === 'Button') {
                // Button should always be <a> or <button> inside owner element
                bryntumConfig.appendTo = elementRef.nativeElement;
            }
            else {
                bryntumConfig.adopt = elementRef.nativeElement;
            }
        }
        else {
            WrapperHelper.devWarningContainer(instanceName, containerParam);
        }
        // @ts-ignore
        me.instance = instanceName === 'Widget' ? WidgetHelper.createWidget(bryntumConfig) : new instanceClass(bryntumConfig);
        // Backwards compatibility for gridInstance, schedulerInstance etc.
        // @ts-ignore
        me[StringHelper.uncapitalize(instanceName) + 'Instance'] = me.instance;
        // 
    }
    /**
     * Watch for changes
     * @param changes
     */
    ngOnChanges(changes) {
        const { instance } = this, { instanceName } = BryntumCalendarComponent;
        if (!instance) {
            return;
        }
        // Iterate over all changes
        Object.entries(changes).forEach(([prop, change]) => {
            const newValue = change.currentValue, { instance } = this, { bryntumConfigsOnly, bryntumProps } = BryntumCalendarComponent;
            if (bryntumProps.includes(prop)) {
                WrapperHelper.applyPropValue(instance, prop, newValue, false);
                if (bryntumConfigsOnly.includes(prop)) {
                    WrapperHelper.devWarningUpdateProp(instanceName, prop);
                }
            }
        });
    }
    /**
     * Destroy the component
     */
    ngOnDestroy() {
        // @ts-ignore
        this.instance && this.instance.destroy && this.instance.destroy();
    }
}
BryntumCalendarComponent.instanceClass = Calendar;
BryntumCalendarComponent.instanceName = 'Calendar';
BryntumCalendarComponent.bryntumEvents = [
    'onActiveItemChange',
    'onAfterEventEdit',
    'onAfterEventSave',
    'onAssignmentSelectionChange',
    'onBeforeActiveItemChange',
    'onBeforeAssignmentDelete',
    'onBeforeAssignmentSelectionChange',
    'onBeforeAutoCreate',
    'onBeforeDestroy',
    'onBeforeDragCreateEnd',
    'onBeforeDragMoveEnd',
    'onBeforeDragResizeEnd',
    'onBeforeEventDelete',
    'onBeforeEventEdit',
    'onBeforeEventEditShow',
    'onBeforeEventSave',
    'onBeforeEventSelectionChange',
    'onBeforeHide',
    'onBeforePrint',
    'onBeforeResponsiveStateChange',
    'onBeforeSetRecord',
    'onBeforeShow',
    'onCatchAll',
    'onCellOverflowClick',
    'onContextMenuItem',
    'onContextMenuToggleItem',
    'onDataChange',
    'onDateChange',
    'onDateRangeChange',
    'onDateRangeRequested',
    'onDayNumberClick',
    'onDestroy',
    'onDragCreateEnd',
    'onDragMoveEnd',
    'onDragResizeEnd',
    'onEmptyCellClick',
    'onEventAutoCreated',
    'onEventClick',
    'onEventContextMenu',
    'onEventDblClick',
    'onEventEditBeforeSetRecord',
    'onEventMenuBeforeShow',
    'onEventMenuItem',
    'onEventMenuShow',
    'onEventMouseDown',
    'onEventMouseOut',
    'onEventMouseOver',
    'onEventMouseUp',
    'onEventPropagate',
    'onEventSelectionChange',
    'onFocusIn',
    'onFocusOut',
    'onHide',
    'onLoadOnDemandFail',
    'onMonthNameClick',
    'onNavigate',
    'onPaint',
    'onRecompose',
    'onRefresh',
    'onResize',
    'onResponsiveHeightChange',
    'onResponsiveStateChange',
    'onResponsiveWidthChange',
    'onScheduleClick',
    'onScheduleContextMenu',
    'onScheduleDblClick',
    'onScheduleMenuBeforeShow',
    'onScheduleMenuItem',
    'onScheduleMenuShow',
    'onScheduleMouseDown',
    'onScheduleMouseOut',
    'onScheduleMouseOver',
    'onScheduleMouseUp',
    'onSelectionChange',
    'onShow',
    'onTimeRangeHeaderClick',
    'onTimeRangeHeaderContextMenu',
    'onTimeRangeHeaderDblClick',
    'onToolClick',
    'onViewPaint',
    'onWeekNumberClick'
];
BryntumCalendarComponent.bryntumFeatureNames = [
    'dragFeature',
    'eventEditFeature',
    'eventMenuFeature',
    'eventTooltipFeature',
    'externalEventSourceFeature',
    'loadOnDemandFeature',
    'printFeature',
    'scheduleMenuFeature',
    'timeRangesFeature',
    'weekExpanderFeature'
];
BryntumCalendarComponent.bryntumConfigs = BryntumCalendarComponent.bryntumFeatureNames.concat([
    'adopt',
    'align',
    'alignSelf',
    'allowOverlap',
    'anchor',
    'appendTo',
    'ariaDescription',
    'ariaLabel',
    'assignments',
    'assignmentStore',
    'autoCreate',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'breakpoints',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'cls',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'content',
    'contentElementCls',
    'contextMenuTriggerEvent',
    'crudManager',
    'crudManagerClass',
    'dataset',
    'date',
    'dateFormat',
    'datePicker',
    'defaultBindProperty',
    'defaultCalendar',
    'defaultFocus',
    'defaults',
    'deselectOnClick',
    'destroyStores',
    'disabled',
    'dock',
    'draggable',
    'enableDeleteKey',
    'enableRecurringEvents',
    'enableUndoRedoKeys',
    'events',
    'eventSelectionDisabled',
    'eventStore',
    'extraData',
    'features',
    'flex',
    'floating',
    'footer',
    'header',
    'height',
    'hidden',
    'hideAnimation',
    'hideNonWorkingDays',
    'hideWhenEmpty',
    'highlightDate',
    'highlightPredecessors',
    'highlightSuccessors',
    'html',
    'htmlCls',
    'id',
    'ignoreParentReadOnly',
    'includeWeekendsButton',
    'insertBefore',
    'insertFirst',
    'isEventSelectable',
    'itemCls',
    'items',
    'layout',
    'layoutStyle',
    'lazyItems',
    'listeners',
    'loadMask',
    'loadMaskDefaults',
    'loadMaskError',
    'localeClass',
    'localizable',
    'localizableProperties',
    'maintainSelectionOnDatasetChange',
    'margin',
    'maskDefaults',
    'masked',
    'maxDate',
    'maxHeight',
    'maxWidth',
    'minDate',
    'minHeight',
    'minWidth',
    'mode',
    'modeDefaults',
    'modes',
    'monitorResize',
    'multiEventSelect',
    'namedItems',
    'navigatorPlacement',
    'nonWorkingDays',
    'overlaySidebar',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'project',
    'readOnly',
    'record',
    'relayStoreEvents',
    'resourceImagePath',
    'resources',
    'resourceStore',
    'resourceTimeRanges',
    'resourceTimeRangeStore',
    'responsive',
    'responsiveRoot',
    'responsiveState',
    'responsiveTarget',
    'ripple',
    'rootElement',
    'scrollable',
    'scrollAction',
    'showAnimation',
    'showRecurringUI',
    'showTooltipWhenDisabled',
    'sidebar',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strictRecordMapping',
    'strips',
    'syncMask',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'timeRanges',
    'timeRangeStore',
    'timeZone',
    'title',
    'tools',
    'tooltip',
    'trapFocus',
    'triggerSelectionChangeOnRemove',
    'ui',
    'weekStartDay',
    'weight',
    'width',
    'x',
    'y'
]);
BryntumCalendarComponent.bryntumConfigsOnly = [
    'adopt',
    'align',
    'allowOverlap',
    'anchor',
    'ariaDescription',
    'ariaLabel',
    'assignmentStore',
    'autoCreate',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'breakpoints',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'contentElementCls',
    'contextMenuTriggerEvent',
    'crudManagerClass',
    'dateFormat',
    'datePicker',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'deselectOnClick',
    'destroyStores',
    'dock',
    'draggable',
    'enableDeleteKey',
    'enableRecurringEvents',
    'enableUndoRedoKeys',
    'eventSelectionDisabled',
    'eventStore',
    'floating',
    'footer',
    'header',
    'hideAnimation',
    'hideWhenEmpty',
    'highlightDate',
    'highlightPredecessors',
    'highlightSuccessors',
    'htmlCls',
    'ignoreParentReadOnly',
    'includeWeekendsButton',
    'itemCls',
    'lazyItems',
    'listeners',
    'loadMask',
    'loadMaskDefaults',
    'loadMaskError',
    'localeClass',
    'localizable',
    'localizableProperties',
    'maintainSelectionOnDatasetChange',
    'maskDefaults',
    'masked',
    'monitorResize',
    'multiEventSelect',
    'namedItems',
    'navigatorPlacement',
    'nonWorkingDays',
    'overlaySidebar',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'relayStoreEvents',
    'resourceImagePath',
    'resourceStore',
    'resourceTimeRangeStore',
    'responsive',
    'responsiveRoot',
    'responsiveState',
    'responsiveTarget',
    'ripple',
    'rootElement',
    'scrollAction',
    'showAnimation',
    'showRecurringUI',
    'showTooltipWhenDisabled',
    'sidebar',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strips',
    'syncMask',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'timeRangeStore',
    'timeZone',
    'trapFocus',
    'triggerSelectionChangeOnRemove',
    'ui',
    'weekStartDay',
    'weight'
];
BryntumCalendarComponent.bryntumProps = BryntumCalendarComponent.bryntumFeatureNames.concat([
    'activeSubView',
    'activeView',
    'alignSelf',
    'anchorSize',
    'appendTo',
    'assignments',
    'cls',
    'content',
    'crudManager',
    'dataset',
    'date',
    'defaultCalendar',
    'disabled',
    'events',
    'extraData',
    'features',
    'flex',
    'height',
    'hidden',
    'hideNonWorkingDays',
    'html',
    'id',
    'insertBefore',
    'insertFirst',
    'isEngineReady',
    'isEventSelectable',
    'isSettingValues',
    'isValid',
    'items',
    'layout',
    'layoutStyle',
    'margin',
    'maxDate',
    'maxHeight',
    'maxWidth',
    'minDate',
    'minHeight',
    'minWidth',
    'mode',
    'modeDefaults',
    'modes',
    'project',
    'readOnly',
    'record',
    'resources',
    'resourceTimeRanges',
    'scrollable',
    'selectedAssignments',
    'selectedEvents',
    'state',
    'strictRecordMapping',
    'timeRanges',
    'title',
    'tools',
    'tooltip',
    'type',
    'values',
    'views',
    'width',
    'x',
    'y'
]);
BryntumCalendarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumCalendarComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
BryntumCalendarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.0", type: BryntumCalendarComponent, selector: "bryntum-calendar", inputs: { adopt: "adopt", align: "align", allowOverlap: "allowOverlap", anchor: "anchor", ariaDescription: "ariaDescription", ariaLabel: "ariaLabel", assignmentStore: "assignmentStore", autoCreate: "autoCreate", autoUpdateRecord: "autoUpdateRecord", bbar: "bbar", bodyCls: "bodyCls", breakpoints: "breakpoints", bubbleEvents: "bubbleEvents", callOnFunctions: "callOnFunctions", centered: "centered", collapsed: "collapsed", collapsible: "collapsible", config: "config", constrainTo: "constrainTo", contentElementCls: "contentElementCls", contextMenuTriggerEvent: "contextMenuTriggerEvent", crudManagerClass: "crudManagerClass", dateFormat: "dateFormat", datePicker: "datePicker", defaultBindProperty: "defaultBindProperty", defaultFocus: "defaultFocus", defaults: "defaults", deselectOnClick: "deselectOnClick", destroyStores: "destroyStores", dock: "dock", draggable: "draggable", enableDeleteKey: "enableDeleteKey", enableRecurringEvents: "enableRecurringEvents", enableUndoRedoKeys: "enableUndoRedoKeys", eventSelectionDisabled: "eventSelectionDisabled", eventStore: "eventStore", floating: "floating", footer: "footer", header: "header", hideAnimation: "hideAnimation", hideWhenEmpty: "hideWhenEmpty", highlightDate: "highlightDate", highlightPredecessors: "highlightPredecessors", highlightSuccessors: "highlightSuccessors", htmlCls: "htmlCls", ignoreParentReadOnly: "ignoreParentReadOnly", includeWeekendsButton: "includeWeekendsButton", itemCls: "itemCls", lazyItems: "lazyItems", listeners: "listeners", loadMask: "loadMask", loadMaskDefaults: "loadMaskDefaults", loadMaskError: "loadMaskError", localeClass: "localeClass", localizable: "localizable", localizableProperties: "localizableProperties", maintainSelectionOnDatasetChange: "maintainSelectionOnDatasetChange", maskDefaults: "maskDefaults", masked: "masked", monitorResize: "monitorResize", multiEventSelect: "multiEventSelect", namedItems: "namedItems", navigatorPlacement: "navigatorPlacement", nonWorkingDays: "nonWorkingDays", overlaySidebar: "overlaySidebar", owner: "owner", positioned: "positioned", preventTooltipOnTouch: "preventTooltipOnTouch", relayStoreEvents: "relayStoreEvents", resourceImagePath: "resourceImagePath", resourceStore: "resourceStore", resourceTimeRangeStore: "resourceTimeRangeStore", responsive: "responsive", responsiveRoot: "responsiveRoot", responsiveState: "responsiveState", responsiveTarget: "responsiveTarget", ripple: "ripple", rootElement: "rootElement", scrollAction: "scrollAction", showAnimation: "showAnimation", showRecurringUI: "showRecurringUI", showTooltipWhenDisabled: "showTooltipWhenDisabled", sidebar: "sidebar", stateful: "stateful", statefulEvents: "statefulEvents", stateId: "stateId", stateProvider: "stateProvider", strips: "strips", syncMask: "syncMask", tab: "tab", tag: "tag", tbar: "tbar", textAlign: "textAlign", textContent: "textContent", timeRangeStore: "timeRangeStore", timeZone: "timeZone", trapFocus: "trapFocus", triggerSelectionChangeOnRemove: "triggerSelectionChangeOnRemove", ui: "ui", weekStartDay: "weekStartDay", weight: "weight", alignSelf: "alignSelf", appendTo: "appendTo", assignments: "assignments", cls: "cls", content: "content", crudManager: "crudManager", dataset: "dataset", date: "date", defaultCalendar: "defaultCalendar", disabled: "disabled", events: "events", extraData: "extraData", features: "features", flex: "flex", height: "height", hidden: "hidden", hideNonWorkingDays: "hideNonWorkingDays", html: "html", id: "id", insertBefore: "insertBefore", insertFirst: "insertFirst", isEventSelectable: "isEventSelectable", items: "items", layout: "layout", layoutStyle: "layoutStyle", margin: "margin", maxDate: "maxDate", maxHeight: "maxHeight", maxWidth: "maxWidth", minDate: "minDate", minHeight: "minHeight", minWidth: "minWidth", mode: "mode", modeDefaults: "modeDefaults", modes: "modes", project: "project", readOnly: "readOnly", record: "record", resources: "resources", resourceTimeRanges: "resourceTimeRanges", scrollable: "scrollable", strictRecordMapping: "strictRecordMapping", timeRanges: "timeRanges", title: "title", tools: "tools", tooltip: "tooltip", width: "width", x: "x", y: "y", activeSubView: "activeSubView", activeView: "activeView", anchorSize: "anchorSize", isEngineReady: "isEngineReady", isSettingValues: "isSettingValues", isValid: "isValid", selectedAssignments: "selectedAssignments", selectedEvents: "selectedEvents", state: "state", type: "type", values: "values", views: "views", dragFeature: "dragFeature", eventEditFeature: "eventEditFeature", eventMenuFeature: "eventMenuFeature", eventTooltipFeature: "eventTooltipFeature", externalEventSourceFeature: "externalEventSourceFeature", loadOnDemandFeature: "loadOnDemandFeature", printFeature: "printFeature", scheduleMenuFeature: "scheduleMenuFeature", timeRangesFeature: "timeRangesFeature", weekExpanderFeature: "weekExpanderFeature" }, outputs: { onActiveItemChange: "onActiveItemChange", onAfterEventEdit: "onAfterEventEdit", onAfterEventSave: "onAfterEventSave", onAssignmentSelectionChange: "onAssignmentSelectionChange", onBeforeActiveItemChange: "onBeforeActiveItemChange", onBeforeAssignmentDelete: "onBeforeAssignmentDelete", onBeforeAssignmentSelectionChange: "onBeforeAssignmentSelectionChange", onBeforeAutoCreate: "onBeforeAutoCreate", onBeforeDestroy: "onBeforeDestroy", onBeforeDragCreateEnd: "onBeforeDragCreateEnd", onBeforeDragMoveEnd: "onBeforeDragMoveEnd", onBeforeDragResizeEnd: "onBeforeDragResizeEnd", onBeforeEventDelete: "onBeforeEventDelete", onBeforeEventEdit: "onBeforeEventEdit", onBeforeEventEditShow: "onBeforeEventEditShow", onBeforeEventSave: "onBeforeEventSave", onBeforeEventSelectionChange: "onBeforeEventSelectionChange", onBeforeHide: "onBeforeHide", onBeforePrint: "onBeforePrint", onBeforeResponsiveStateChange: "onBeforeResponsiveStateChange", onBeforeSetRecord: "onBeforeSetRecord", onBeforeShow: "onBeforeShow", onCatchAll: "onCatchAll", onCellOverflowClick: "onCellOverflowClick", onContextMenuItem: "onContextMenuItem", onContextMenuToggleItem: "onContextMenuToggleItem", onDataChange: "onDataChange", onDateChange: "onDateChange", onDateRangeChange: "onDateRangeChange", onDateRangeRequested: "onDateRangeRequested", onDayNumberClick: "onDayNumberClick", onDestroy: "onDestroy", onDragCreateEnd: "onDragCreateEnd", onDragMoveEnd: "onDragMoveEnd", onDragResizeEnd: "onDragResizeEnd", onEmptyCellClick: "onEmptyCellClick", onEventAutoCreated: "onEventAutoCreated", onEventClick: "onEventClick", onEventContextMenu: "onEventContextMenu", onEventDblClick: "onEventDblClick", onEventEditBeforeSetRecord: "onEventEditBeforeSetRecord", onEventMenuBeforeShow: "onEventMenuBeforeShow", onEventMenuItem: "onEventMenuItem", onEventMenuShow: "onEventMenuShow", onEventMouseDown: "onEventMouseDown", onEventMouseOut: "onEventMouseOut", onEventMouseOver: "onEventMouseOver", onEventMouseUp: "onEventMouseUp", onEventPropagate: "onEventPropagate", onEventSelectionChange: "onEventSelectionChange", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onHide: "onHide", onLoadOnDemandFail: "onLoadOnDemandFail", onMonthNameClick: "onMonthNameClick", onNavigate: "onNavigate", onPaint: "onPaint", onReadOnly: "onReadOnly", onRecompose: "onRecompose", onRefresh: "onRefresh", onResize: "onResize", onResponsiveHeightChange: "onResponsiveHeightChange", onResponsiveStateChange: "onResponsiveStateChange", onResponsiveWidthChange: "onResponsiveWidthChange", onScheduleClick: "onScheduleClick", onScheduleContextMenu: "onScheduleContextMenu", onScheduleDblClick: "onScheduleDblClick", onScheduleMenuBeforeShow: "onScheduleMenuBeforeShow", onScheduleMenuItem: "onScheduleMenuItem", onScheduleMenuShow: "onScheduleMenuShow", onScheduleMouseDown: "onScheduleMouseDown", onScheduleMouseOut: "onScheduleMouseOut", onScheduleMouseOver: "onScheduleMouseOver", onScheduleMouseUp: "onScheduleMouseUp", onSelectionChange: "onSelectionChange", onShow: "onShow", onTimeRangeHeaderClick: "onTimeRangeHeaderClick", onTimeRangeHeaderContextMenu: "onTimeRangeHeaderContextMenu", onTimeRangeHeaderDblClick: "onTimeRangeHeaderDblClick", onToolClick: "onToolClick", onViewPaint: "onViewPaint", onWeekNumberClick: "onWeekNumberClick" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumCalendarComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bryntum-calendar',
                    template: ''
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { adopt: [{
                type: Input
            }], align: [{
                type: Input
            }], allowOverlap: [{
                type: Input
            }], anchor: [{
                type: Input
            }], ariaDescription: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], assignmentStore: [{
                type: Input
            }], autoCreate: [{
                type: Input
            }], autoUpdateRecord: [{
                type: Input
            }], bbar: [{
                type: Input
            }], bodyCls: [{
                type: Input
            }], breakpoints: [{
                type: Input
            }], bubbleEvents: [{
                type: Input
            }], callOnFunctions: [{
                type: Input
            }], centered: [{
                type: Input
            }], collapsed: [{
                type: Input
            }], collapsible: [{
                type: Input
            }], config: [{
                type: Input
            }], constrainTo: [{
                type: Input
            }], contentElementCls: [{
                type: Input
            }], contextMenuTriggerEvent: [{
                type: Input
            }], crudManagerClass: [{
                type: Input
            }], dateFormat: [{
                type: Input
            }], datePicker: [{
                type: Input
            }], defaultBindProperty: [{
                type: Input
            }], defaultFocus: [{
                type: Input
            }], defaults: [{
                type: Input
            }], deselectOnClick: [{
                type: Input
            }], destroyStores: [{
                type: Input
            }], dock: [{
                type: Input
            }], draggable: [{
                type: Input
            }], enableDeleteKey: [{
                type: Input
            }], enableRecurringEvents: [{
                type: Input
            }], enableUndoRedoKeys: [{
                type: Input
            }], eventSelectionDisabled: [{
                type: Input
            }], eventStore: [{
                type: Input
            }], floating: [{
                type: Input
            }], footer: [{
                type: Input
            }], header: [{
                type: Input
            }], hideAnimation: [{
                type: Input
            }], hideWhenEmpty: [{
                type: Input
            }], highlightDate: [{
                type: Input
            }], highlightPredecessors: [{
                type: Input
            }], highlightSuccessors: [{
                type: Input
            }], htmlCls: [{
                type: Input
            }], ignoreParentReadOnly: [{
                type: Input
            }], includeWeekendsButton: [{
                type: Input
            }], itemCls: [{
                type: Input
            }], lazyItems: [{
                type: Input
            }], listeners: [{
                type: Input
            }], loadMask: [{
                type: Input
            }], loadMaskDefaults: [{
                type: Input
            }], loadMaskError: [{
                type: Input
            }], localeClass: [{
                type: Input
            }], localizable: [{
                type: Input
            }], localizableProperties: [{
                type: Input
            }], maintainSelectionOnDatasetChange: [{
                type: Input
            }], maskDefaults: [{
                type: Input
            }], masked: [{
                type: Input
            }], monitorResize: [{
                type: Input
            }], multiEventSelect: [{
                type: Input
            }], namedItems: [{
                type: Input
            }], navigatorPlacement: [{
                type: Input
            }], nonWorkingDays: [{
                type: Input
            }], overlaySidebar: [{
                type: Input
            }], owner: [{
                type: Input
            }], positioned: [{
                type: Input
            }], preventTooltipOnTouch: [{
                type: Input
            }], relayStoreEvents: [{
                type: Input
            }], resourceImagePath: [{
                type: Input
            }], resourceStore: [{
                type: Input
            }], resourceTimeRangeStore: [{
                type: Input
            }], responsive: [{
                type: Input
            }], responsiveRoot: [{
                type: Input
            }], responsiveState: [{
                type: Input
            }], responsiveTarget: [{
                type: Input
            }], ripple: [{
                type: Input
            }], rootElement: [{
                type: Input
            }], scrollAction: [{
                type: Input
            }], showAnimation: [{
                type: Input
            }], showRecurringUI: [{
                type: Input
            }], showTooltipWhenDisabled: [{
                type: Input
            }], sidebar: [{
                type: Input
            }], stateful: [{
                type: Input
            }], statefulEvents: [{
                type: Input
            }], stateId: [{
                type: Input
            }], stateProvider: [{
                type: Input
            }], strips: [{
                type: Input
            }], syncMask: [{
                type: Input
            }], tab: [{
                type: Input
            }], tag: [{
                type: Input
            }], tbar: [{
                type: Input
            }], textAlign: [{
                type: Input
            }], textContent: [{
                type: Input
            }], timeRangeStore: [{
                type: Input
            }], timeZone: [{
                type: Input
            }], trapFocus: [{
                type: Input
            }], triggerSelectionChangeOnRemove: [{
                type: Input
            }], ui: [{
                type: Input
            }], weekStartDay: [{
                type: Input
            }], weight: [{
                type: Input
            }], alignSelf: [{
                type: Input
            }], appendTo: [{
                type: Input
            }], assignments: [{
                type: Input
            }], cls: [{
                type: Input
            }], content: [{
                type: Input
            }], crudManager: [{
                type: Input
            }], dataset: [{
                type: Input
            }], date: [{
                type: Input
            }], defaultCalendar: [{
                type: Input
            }], disabled: [{
                type: Input
            }], events: [{
                type: Input
            }], extraData: [{
                type: Input
            }], features: [{
                type: Input
            }], flex: [{
                type: Input
            }], height: [{
                type: Input
            }], hidden: [{
                type: Input
            }], hideNonWorkingDays: [{
                type: Input
            }], html: [{
                type: Input
            }], id: [{
                type: Input
            }], insertBefore: [{
                type: Input
            }], insertFirst: [{
                type: Input
            }], isEventSelectable: [{
                type: Input
            }], items: [{
                type: Input
            }], layout: [{
                type: Input
            }], layoutStyle: [{
                type: Input
            }], margin: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], minDate: [{
                type: Input
            }], minHeight: [{
                type: Input
            }], minWidth: [{
                type: Input
            }], mode: [{
                type: Input
            }], modeDefaults: [{
                type: Input
            }], modes: [{
                type: Input
            }], project: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], record: [{
                type: Input
            }], resources: [{
                type: Input
            }], resourceTimeRanges: [{
                type: Input
            }], scrollable: [{
                type: Input
            }], strictRecordMapping: [{
                type: Input
            }], timeRanges: [{
                type: Input
            }], title: [{
                type: Input
            }], tools: [{
                type: Input
            }], tooltip: [{
                type: Input
            }], width: [{
                type: Input
            }], x: [{
                type: Input
            }], y: [{
                type: Input
            }], activeSubView: [{
                type: Input
            }], activeView: [{
                type: Input
            }], anchorSize: [{
                type: Input
            }], isEngineReady: [{
                type: Input
            }], isSettingValues: [{
                type: Input
            }], isValid: [{
                type: Input
            }], selectedAssignments: [{
                type: Input
            }], selectedEvents: [{
                type: Input
            }], state: [{
                type: Input
            }], type: [{
                type: Input
            }], values: [{
                type: Input
            }], views: [{
                type: Input
            }], onActiveItemChange: [{
                type: Output
            }], onAfterEventEdit: [{
                type: Output
            }], onAfterEventSave: [{
                type: Output
            }], onAssignmentSelectionChange: [{
                type: Output
            }], onBeforeActiveItemChange: [{
                type: Output
            }], onBeforeAssignmentDelete: [{
                type: Output
            }], onBeforeAssignmentSelectionChange: [{
                type: Output
            }], onBeforeAutoCreate: [{
                type: Output
            }], onBeforeDestroy: [{
                type: Output
            }], onBeforeDragCreateEnd: [{
                type: Output
            }], onBeforeDragMoveEnd: [{
                type: Output
            }], onBeforeDragResizeEnd: [{
                type: Output
            }], onBeforeEventDelete: [{
                type: Output
            }], onBeforeEventEdit: [{
                type: Output
            }], onBeforeEventEditShow: [{
                type: Output
            }], onBeforeEventSave: [{
                type: Output
            }], onBeforeEventSelectionChange: [{
                type: Output
            }], onBeforeHide: [{
                type: Output
            }], onBeforePrint: [{
                type: Output
            }], onBeforeResponsiveStateChange: [{
                type: Output
            }], onBeforeSetRecord: [{
                type: Output
            }], onBeforeShow: [{
                type: Output
            }], onCatchAll: [{
                type: Output
            }], onCellOverflowClick: [{
                type: Output
            }], onContextMenuItem: [{
                type: Output
            }], onContextMenuToggleItem: [{
                type: Output
            }], onDataChange: [{
                type: Output
            }], onDateChange: [{
                type: Output
            }], onDateRangeChange: [{
                type: Output
            }], onDateRangeRequested: [{
                type: Output
            }], onDayNumberClick: [{
                type: Output
            }], onDestroy: [{
                type: Output
            }], onDragCreateEnd: [{
                type: Output
            }], onDragMoveEnd: [{
                type: Output
            }], onDragResizeEnd: [{
                type: Output
            }], onEmptyCellClick: [{
                type: Output
            }], onEventAutoCreated: [{
                type: Output
            }], onEventClick: [{
                type: Output
            }], onEventContextMenu: [{
                type: Output
            }], onEventDblClick: [{
                type: Output
            }], onEventEditBeforeSetRecord: [{
                type: Output
            }], onEventMenuBeforeShow: [{
                type: Output
            }], onEventMenuItem: [{
                type: Output
            }], onEventMenuShow: [{
                type: Output
            }], onEventMouseDown: [{
                type: Output
            }], onEventMouseOut: [{
                type: Output
            }], onEventMouseOver: [{
                type: Output
            }], onEventMouseUp: [{
                type: Output
            }], onEventPropagate: [{
                type: Output
            }], onEventSelectionChange: [{
                type: Output
            }], onFocusIn: [{
                type: Output
            }], onFocusOut: [{
                type: Output
            }], onHide: [{
                type: Output
            }], onLoadOnDemandFail: [{
                type: Output
            }], onMonthNameClick: [{
                type: Output
            }], onNavigate: [{
                type: Output
            }], onPaint: [{
                type: Output
            }], onReadOnly: [{
                type: Output
            }], onRecompose: [{
                type: Output
            }], onRefresh: [{
                type: Output
            }], onResize: [{
                type: Output
            }], onResponsiveHeightChange: [{
                type: Output
            }], onResponsiveStateChange: [{
                type: Output
            }], onResponsiveWidthChange: [{
                type: Output
            }], onScheduleClick: [{
                type: Output
            }], onScheduleContextMenu: [{
                type: Output
            }], onScheduleDblClick: [{
                type: Output
            }], onScheduleMenuBeforeShow: [{
                type: Output
            }], onScheduleMenuItem: [{
                type: Output
            }], onScheduleMenuShow: [{
                type: Output
            }], onScheduleMouseDown: [{
                type: Output
            }], onScheduleMouseOut: [{
                type: Output
            }], onScheduleMouseOver: [{
                type: Output
            }], onScheduleMouseUp: [{
                type: Output
            }], onSelectionChange: [{
                type: Output
            }], onShow: [{
                type: Output
            }], onTimeRangeHeaderClick: [{
                type: Output
            }], onTimeRangeHeaderContextMenu: [{
                type: Output
            }], onTimeRangeHeaderDblClick: [{
                type: Output
            }], onToolClick: [{
                type: Output
            }], onViewPaint: [{
                type: Output
            }], onWeekNumberClick: [{
                type: Output
            }], dragFeature: [{
                type: Input
            }], eventEditFeature: [{
                type: Input
            }], eventMenuFeature: [{
                type: Input
            }], eventTooltipFeature: [{
                type: Input
            }], externalEventSourceFeature: [{
                type: Input
            }], loadOnDemandFeature: [{
                type: Input
            }], printFeature: [{
                type: Input
            }], scheduleMenuFeature: [{
                type: Input
            }], timeRangesFeature: [{
                type: Input
            }], weekExpanderFeature: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,