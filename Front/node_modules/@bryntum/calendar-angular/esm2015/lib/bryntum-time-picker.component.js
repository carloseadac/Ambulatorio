/**
 * Angular wrapper for Bryntum TimePicker
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
import WrapperHelper from './wrapper.helper';
import { TimePicker, WidgetHelper } from '@bryntum/calendar';
import * as i0 from "@angular/core";
export class BryntumTimePickerComponent {
    constructor(element) {
        this.bryntumConfig = {
            adopt: undefined,
            appendTo: undefined,
            href: undefined,
            angularComponent: this,
            features: {},
            listeners: {}
        };
        // Events
        this.onBeforeDestroy = new EventEmitter();
        this.onBeforeHide = new EventEmitter();
        this.onBeforeSetRecord = new EventEmitter();
        this.onBeforeShow = new EventEmitter();
        this.onCatchAll = new EventEmitter();
        this.onDestroy = new EventEmitter();
        this.onFocusIn = new EventEmitter();
        this.onFocusOut = new EventEmitter();
        this.onHide = new EventEmitter();
        this.onPaint = new EventEmitter();
        this.onReadOnly = new EventEmitter();
        this.onRecompose = new EventEmitter();
        this.onResize = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onTimeChange = new EventEmitter();
        this.elementRef = element;
    }
    /**
     * Create and append the underlying widget
     */
    ngOnInit() {
        const me = this, { elementRef, bryntumConfig } = me, { instanceClass, instanceName, bryntumConfigs, bryntumEvents } = BryntumTimePickerComponent;
        bryntumConfigs.filter(prop => prop in this).forEach(prop => {
            // @ts-ignore
            WrapperHelper.applyPropValue(bryntumConfig, prop, this[prop]);
            if (['features', 'config'].includes(prop)) {
                WrapperHelper.devWarningConfigProp(instanceName, prop);
            }
        });
        // @ts-ignore
        bryntumEvents.filter(event => this[event] && this[event].observers.length > 0).forEach(event => {
            const uncapitalize = (str) => str.charAt(0).toLowerCase() + str.slice(1), eventName = (str) => uncapitalize(str.slice(2));
            // @ts-ignore
            bryntumConfig.listeners[eventName(event)] = e => {
                // @ts-ignore
                me[event].emit(e);
                // EventEmitter does not return values in the normal way, work around it by setting `returnValue` flag
                // in Angular listeners
                return e.returnValue;
            };
        });
        // If component has no container specified in config then use adopt to Wrapper's element
        const containerParam = [
            'adopt',
            'appendTo',
            'insertAfter',
            'insertBefore'
            // @ts-ignore
        ].find(prop => bryntumConfig[prop]);
        if (!containerParam) {
            if (instanceName === 'Button') {
                // Button should always be <a> or <button> inside owner element
                bryntumConfig.appendTo = elementRef.nativeElement;
            }
            else {
                bryntumConfig.adopt = elementRef.nativeElement;
            }
        }
        else {
            WrapperHelper.devWarningContainer(instanceName, containerParam);
        }
        // @ts-ignore
        me.instance = instanceName === 'Widget' ? WidgetHelper.createWidget(bryntumConfig) : new instanceClass(bryntumConfig);
    }
    /**
     * Watch for changes
     * @param changes
     */
    ngOnChanges(changes) {
        const { instance } = this, { instanceName } = BryntumTimePickerComponent;
        if (!instance) {
            return;
        }
        // Iterate over all changes
        Object.entries(changes).forEach(([prop, change]) => {
            const newValue = change.currentValue, { instance } = this, { bryntumConfigsOnly, bryntumProps } = BryntumTimePickerComponent;
            if (bryntumProps.includes(prop)) {
                WrapperHelper.applyPropValue(instance, prop, newValue, false);
                if (bryntumConfigsOnly.includes(prop)) {
                    WrapperHelper.devWarningUpdateProp(instanceName, prop);
                }
            }
        });
    }
    /**
     * Destroy the component
     */
    ngOnDestroy() {
        // @ts-ignore
        this.instance && this.instance.destroy && this.instance.destroy();
    }
}
BryntumTimePickerComponent.instanceClass = TimePicker;
BryntumTimePickerComponent.instanceName = 'TimePicker';
BryntumTimePickerComponent.bryntumEvents = [
    'onBeforeDestroy',
    'onBeforeHide',
    'onBeforeSetRecord',
    'onBeforeShow',
    'onCatchAll',
    'onDestroy',
    'onFocusIn',
    'onFocusOut',
    'onHide',
    'onPaint',
    'onRecompose',
    'onResize',
    'onShow',
    'onTimeChange'
];
BryntumTimePickerComponent.bryntumFeatureNames = [];
BryntumTimePickerComponent.bryntumConfigs = BryntumTimePickerComponent.bryntumFeatureNames.concat([
    'adopt',
    'align',
    'alignSelf',
    'anchor',
    'appendTo',
    'ariaDescription',
    'ariaLabel',
    'autoUpdateRecord',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'cls',
    'config',
    'constrainTo',
    'content',
    'contentElementCls',
    'dataset',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'disabled',
    'dock',
    'draggable',
    'extraData',
    'flex',
    'floating',
    'format',
    'height',
    'hidden',
    'hideAnimation',
    'hideWhenEmpty',
    'html',
    'htmlCls',
    'id',
    'ignoreParentReadOnly',
    'insertBefore',
    'insertFirst',
    'itemCls',
    'items',
    'layout',
    'layoutStyle',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'margin',
    'maskDefaults',
    'masked',
    'max',
    'maxHeight',
    'maxWidth',
    'min',
    'minHeight',
    'minWidth',
    'monitorResize',
    'namedItems',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'readOnly',
    'record',
    'relayStoreEvents',
    'ripple',
    'rootElement',
    'scrollable',
    'scrollAction',
    'seconds',
    'showAnimation',
    'showTooltipWhenDisabled',
    'strictRecordMapping',
    'tab',
    'tag',
    'textAlign',
    'textContent',
    'title',
    'tooltip',
    'ui',
    'value',
    'weight',
    'width',
    'x',
    'y'
]);
BryntumTimePickerComponent.bryntumConfigsOnly = [
    'adopt',
    'align',
    'anchor',
    'ariaDescription',
    'ariaLabel',
    'autoUpdateRecord',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'config',
    'constrainTo',
    'contentElementCls',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'dock',
    'draggable',
    'floating',
    'hideAnimation',
    'hideWhenEmpty',
    'htmlCls',
    'ignoreParentReadOnly',
    'itemCls',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'maskDefaults',
    'masked',
    'monitorResize',
    'namedItems',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'relayStoreEvents',
    'ripple',
    'rootElement',
    'scrollAction',
    'seconds',
    'showAnimation',
    'showTooltipWhenDisabled',
    'tab',
    'tag',
    'textAlign',
    'textContent',
    'title',
    'ui',
    'weight'
];
BryntumTimePickerComponent.bryntumProps = BryntumTimePickerComponent.bryntumFeatureNames.concat([
    'alignSelf',
    'anchorSize',
    'appendTo',
    'cls',
    'content',
    'dataset',
    'disabled',
    'extraData',
    'flex',
    'format',
    'height',
    'hidden',
    'html',
    'id',
    'initialValue',
    'insertBefore',
    'insertFirst',
    'isSettingValues',
    'isValid',
    'items',
    'layout',
    'layoutStyle',
    'margin',
    'max',
    'maxHeight',
    'maxWidth',
    'min',
    'minHeight',
    'minWidth',
    'readOnly',
    'record',
    'scrollable',
    'strictRecordMapping',
    'tooltip',
    'type',
    'value',
    'values',
    'width',
    'x',
    'y'
]);
BryntumTimePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumTimePickerComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
BryntumTimePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.0", type: BryntumTimePickerComponent, selector: "bryntum-time-picker", inputs: { adopt: "adopt", align: "align", anchor: "anchor", ariaDescription: "ariaDescription", ariaLabel: "ariaLabel", autoUpdateRecord: "autoUpdateRecord", bubbleEvents: "bubbleEvents", callOnFunctions: "callOnFunctions", centered: "centered", config: "config", constrainTo: "constrainTo", contentElementCls: "contentElementCls", defaultBindProperty: "defaultBindProperty", defaultFocus: "defaultFocus", defaults: "defaults", dock: "dock", draggable: "draggable", floating: "floating", hideAnimation: "hideAnimation", hideWhenEmpty: "hideWhenEmpty", htmlCls: "htmlCls", ignoreParentReadOnly: "ignoreParentReadOnly", itemCls: "itemCls", lazyItems: "lazyItems", listeners: "listeners", localeClass: "localeClass", localizable: "localizable", localizableProperties: "localizableProperties", maskDefaults: "maskDefaults", masked: "masked", monitorResize: "monitorResize", namedItems: "namedItems", owner: "owner", positioned: "positioned", preventTooltipOnTouch: "preventTooltipOnTouch", relayStoreEvents: "relayStoreEvents", ripple: "ripple", rootElement: "rootElement", scrollAction: "scrollAction", seconds: "seconds", showAnimation: "showAnimation", showTooltipWhenDisabled: "showTooltipWhenDisabled", tab: "tab", tag: "tag", textAlign: "textAlign", textContent: "textContent", title: "title", ui: "ui", weight: "weight", alignSelf: "alignSelf", appendTo: "appendTo", cls: "cls", content: "content", dataset: "dataset", disabled: "disabled", extraData: "extraData", flex: "flex", format: "format", height: "height", hidden: "hidden", html: "html", id: "id", insertBefore: "insertBefore", insertFirst: "insertFirst", items: "items", layout: "layout", layoutStyle: "layoutStyle", margin: "margin", max: "max", maxHeight: "maxHeight", maxWidth: "maxWidth", min: "min", minHeight: "minHeight", minWidth: "minWidth", readOnly: "readOnly", record: "record", scrollable: "scrollable", strictRecordMapping: "strictRecordMapping", tooltip: "tooltip", value: "value", width: "width", x: "x", y: "y", anchorSize: "anchorSize", initialValue: "initialValue", isSettingValues: "isSettingValues", isValid: "isValid", type: "type", values: "values" }, outputs: { onBeforeDestroy: "onBeforeDestroy", onBeforeHide: "onBeforeHide", onBeforeSetRecord: "onBeforeSetRecord", onBeforeShow: "onBeforeShow", onCatchAll: "onCatchAll", onDestroy: "onDestroy", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onHide: "onHide", onPaint: "onPaint", onReadOnly: "onReadOnly", onRecompose: "onRecompose", onResize: "onResize", onShow: "onShow", onTimeChange: "onTimeChange" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumTimePickerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bryntum-time-picker',
                    template: ''
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { adopt: [{
                type: Input
            }], align: [{
                type: Input
            }], anchor: [{
                type: Input
            }], ariaDescription: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], autoUpdateRecord: [{
                type: Input
            }], bubbleEvents: [{
                type: Input
            }], callOnFunctions: [{
                type: Input
            }], centered: [{
                type: Input
            }], config: [{
                type: Input
            }], constrainTo: [{
                type: Input
            }], contentElementCls: [{
                type: Input
            }], defaultBindProperty: [{
                type: Input
            }], defaultFocus: [{
                type: Input
            }], defaults: [{
                type: Input
            }], dock: [{
                type: Input
            }], draggable: [{
                type: Input
            }], floating: [{
                type: Input
            }], hideAnimation: [{
                type: Input
            }], hideWhenEmpty: [{
                type: Input
            }], htmlCls: [{
                type: Input
            }], ignoreParentReadOnly: [{
                type: Input
            }], itemCls: [{
                type: Input
            }], lazyItems: [{
                type: Input
            }], listeners: [{
                type: Input
            }], localeClass: [{
                type: Input
            }], localizable: [{
                type: Input
            }], localizableProperties: [{
                type: Input
            }], maskDefaults: [{
                type: Input
            }], masked: [{
                type: Input
            }], monitorResize: [{
                type: Input
            }], namedItems: [{
                type: Input
            }], owner: [{
                type: Input
            }], positioned: [{
                type: Input
            }], preventTooltipOnTouch: [{
                type: Input
            }], relayStoreEvents: [{
                type: Input
            }], ripple: [{
                type: Input
            }], rootElement: [{
                type: Input
            }], scrollAction: [{
                type: Input
            }], seconds: [{
                type: Input
            }], showAnimation: [{
                type: Input
            }], showTooltipWhenDisabled: [{
                type: Input
            }], tab: [{
                type: Input
            }], tag: [{
                type: Input
            }], textAlign: [{
                type: Input
            }], textContent: [{
                type: Input
            }], title: [{
                type: Input
            }], ui: [{
                type: Input
            }], weight: [{
                type: Input
            }], alignSelf: [{
                type: Input
            }], appendTo: [{
                type: Input
            }], cls: [{
                type: Input
            }], content: [{
                type: Input
            }], dataset: [{
                type: Input
            }], disabled: [{
                type: Input
            }], extraData: [{
                type: Input
            }], flex: [{
                type: Input
            }], format: [{
                type: Input
            }], height: [{
                type: Input
            }], hidden: [{
                type: Input
            }], html: [{
                type: Input
            }], id: [{
                type: Input
            }], insertBefore: [{
                type: Input
            }], insertFirst: [{
                type: Input
            }], items: [{
                type: Input
            }], layout: [{
                type: Input
            }], layoutStyle: [{
                type: Input
            }], margin: [{
                type: Input
            }], max: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], min: [{
                type: Input
            }], minHeight: [{
                type: Input
            }], minWidth: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], record: [{
                type: Input
            }], scrollable: [{
                type: Input
            }], strictRecordMapping: [{
                type: Input
            }], tooltip: [{
                type: Input
            }], value: [{
                type: Input
            }], width: [{
                type: Input
            }], x: [{
                type: Input
            }], y: [{
                type: Input
            }], anchorSize: [{
                type: Input
            }], initialValue: [{
                type: Input
            }], isSettingValues: [{
                type: Input
            }], isValid: [{
                type: Input
            }], type: [{
                type: Input
            }], values: [{
                type: Input
            }], onBeforeDestroy: [{
                type: Output
            }], onBeforeHide: [{
                type: Output
            }], onBeforeSetRecord: [{
                type: Output
            }], onBeforeShow: [{
                type: Output
            }], onCatchAll: [{
                type: Output
            }], onDestroy: [{
                type: Output
            }], onFocusIn: [{
                type: Output
            }], onFocusOut: [{
                type: Output
            }], onHide: [{
                type: Output
            }], onPaint: [{
                type: Output
            }], onReadOnly: [{
                type: Output
            }], onRecompose: [{
                type: Output
            }], onResize: [{
                type: Output
            }], onShow: [{
                type: Output
            }], onTimeChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,