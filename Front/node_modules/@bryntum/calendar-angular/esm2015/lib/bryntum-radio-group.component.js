/**
 * Angular wrapper for Bryntum RadioGroup
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
import WrapperHelper from './wrapper.helper';
import { RadioGroup, WidgetHelper } from '@bryntum/calendar';
import * as i0 from "@angular/core";
export class BryntumRadioGroupComponent {
    constructor(element) {
        this.bryntumConfig = {
            adopt: undefined,
            appendTo: undefined,
            href: undefined,
            angularComponent: this,
            features: {},
            listeners: {}
        };
        // Events
        this.onBeforeDestroy = new EventEmitter();
        this.onBeforeHide = new EventEmitter();
        this.onBeforeSetRecord = new EventEmitter();
        this.onBeforeShow = new EventEmitter();
        this.onCatchAll = new EventEmitter();
        this.onDestroy = new EventEmitter();
        this.onFocusIn = new EventEmitter();
        this.onFocusOut = new EventEmitter();
        this.onHide = new EventEmitter();
        this.onPaint = new EventEmitter();
        this.onReadOnly = new EventEmitter();
        this.onRecompose = new EventEmitter();
        this.onResize = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onToolClick = new EventEmitter();
        this.elementRef = element;
    }
    /**
     * Create and append the underlying widget
     */
    ngOnInit() {
        const me = this, { elementRef, bryntumConfig } = me, { instanceClass, instanceName, bryntumConfigs, bryntumEvents } = BryntumRadioGroupComponent;
        bryntumConfigs.filter(prop => prop in this).forEach(prop => {
            // @ts-ignore
            WrapperHelper.applyPropValue(bryntumConfig, prop, this[prop]);
            if (['features', 'config'].includes(prop)) {
                WrapperHelper.devWarningConfigProp(instanceName, prop);
            }
        });
        // @ts-ignore
        bryntumEvents.filter(event => this[event] && this[event].observers.length > 0).forEach(event => {
            const uncapitalize = (str) => str.charAt(0).toLowerCase() + str.slice(1), eventName = (str) => uncapitalize(str.slice(2));
            // @ts-ignore
            bryntumConfig.listeners[eventName(event)] = e => {
                // @ts-ignore
                me[event].emit(e);
                // EventEmitter does not return values in the normal way, work around it by setting `returnValue` flag
                // in Angular listeners
                return e.returnValue;
            };
        });
        // If component has no container specified in config then use adopt to Wrapper's element
        const containerParam = [
            'adopt',
            'appendTo',
            'insertAfter',
            'insertBefore'
            // @ts-ignore
        ].find(prop => bryntumConfig[prop]);
        if (!containerParam) {
            if (instanceName === 'Button') {
                // Button should always be <a> or <button> inside owner element
                bryntumConfig.appendTo = elementRef.nativeElement;
            }
            else {
                bryntumConfig.adopt = elementRef.nativeElement;
            }
        }
        else {
            WrapperHelper.devWarningContainer(instanceName, containerParam);
        }
        // @ts-ignore
        me.instance = instanceName === 'Widget' ? WidgetHelper.createWidget(bryntumConfig) : new instanceClass(bryntumConfig);
    }
    /**
     * Watch for changes
     * @param changes
     */
    ngOnChanges(changes) {
        const { instance } = this, { instanceName } = BryntumRadioGroupComponent;
        if (!instance) {
            return;
        }
        // Iterate over all changes
        Object.entries(changes).forEach(([prop, change]) => {
            const newValue = change.currentValue, { instance } = this, { bryntumConfigsOnly, bryntumProps } = BryntumRadioGroupComponent;
            if (bryntumProps.includes(prop)) {
                WrapperHelper.applyPropValue(instance, prop, newValue, false);
                if (bryntumConfigsOnly.includes(prop)) {
                    WrapperHelper.devWarningUpdateProp(instanceName, prop);
                }
            }
        });
    }
    /**
     * Destroy the component
     */
    ngOnDestroy() {
        // @ts-ignore
        this.instance && this.instance.destroy && this.instance.destroy();
    }
}
BryntumRadioGroupComponent.instanceClass = RadioGroup;
BryntumRadioGroupComponent.instanceName = 'RadioGroup';
BryntumRadioGroupComponent.bryntumEvents = [
    'onBeforeDestroy',
    'onBeforeHide',
    'onBeforeSetRecord',
    'onBeforeShow',
    'onCatchAll',
    'onDestroy',
    'onFocusIn',
    'onFocusOut',
    'onHide',
    'onPaint',
    'onRecompose',
    'onResize',
    'onShow',
    'onToolClick'
];
BryntumRadioGroupComponent.bryntumFeatureNames = [];
BryntumRadioGroupComponent.bryntumConfigs = BryntumRadioGroupComponent.bryntumFeatureNames.concat([
    'adopt',
    'align',
    'alignSelf',
    'anchor',
    'appendTo',
    'ariaDescription',
    'ariaLabel',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'clearable',
    'cls',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'content',
    'contentElementCls',
    'dataset',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'disabled',
    'dock',
    'draggable',
    'extraData',
    'flex',
    'floating',
    'footer',
    'header',
    'height',
    'hidden',
    'hideAnimation',
    'hideWhenEmpty',
    'html',
    'htmlCls',
    'id',
    'ignoreParentReadOnly',
    'inline',
    'insertBefore',
    'insertFirst',
    'itemCls',
    'items',
    'label',
    'labelCls',
    'labelPosition',
    'labelWidth',
    'layout',
    'layoutStyle',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'margin',
    'maskDefaults',
    'masked',
    'maxHeight',
    'maxWidth',
    'minHeight',
    'minWidth',
    'monitorResize',
    'name',
    'namedItems',
    'options',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'readOnly',
    'record',
    'relayStoreEvents',
    'ripple',
    'rootElement',
    'scrollable',
    'scrollAction',
    'showAnimation',
    'showTooltipWhenDisabled',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strictRecordMapping',
    'strips',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'title',
    'tools',
    'tooltip',
    'trapFocus',
    'ui',
    'weight',
    'width',
    'x',
    'y'
]);
BryntumRadioGroupComponent.bryntumConfigsOnly = [
    'adopt',
    'align',
    'anchor',
    'ariaDescription',
    'ariaLabel',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'bubbleEvents',
    'callOnFunctions',
    'centered',
    'clearable',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'contentElementCls',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'dock',
    'draggable',
    'floating',
    'footer',
    'header',
    'hideAnimation',
    'hideWhenEmpty',
    'htmlCls',
    'ignoreParentReadOnly',
    'inline',
    'itemCls',
    'labelCls',
    'labelPosition',
    'labelWidth',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'maskDefaults',
    'masked',
    'monitorResize',
    'name',
    'namedItems',
    'options',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'relayStoreEvents',
    'ripple',
    'rootElement',
    'scrollAction',
    'showAnimation',
    'showTooltipWhenDisabled',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strips',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'trapFocus',
    'ui',
    'weight'
];
BryntumRadioGroupComponent.bryntumProps = BryntumRadioGroupComponent.bryntumFeatureNames.concat([
    'alignSelf',
    'anchorSize',
    'appendTo',
    'cls',
    'content',
    'dataset',
    'disabled',
    'extraData',
    'flex',
    'height',
    'hidden',
    'html',
    'id',
    'insertBefore',
    'insertFirst',
    'isSettingValues',
    'isValid',
    'items',
    'label',
    'layout',
    'layoutStyle',
    'margin',
    'maxHeight',
    'maxWidth',
    'minHeight',
    'minWidth',
    'readOnly',
    'record',
    'scrollable',
    'state',
    'strictRecordMapping',
    'title',
    'tools',
    'tooltip',
    'type',
    'value',
    'values',
    'width',
    'x',
    'y'
]);
BryntumRadioGroupComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumRadioGroupComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
BryntumRadioGroupComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.0", type: BryntumRadioGroupComponent, selector: "bryntum-radio-group", inputs: { adopt: "adopt", align: "align", anchor: "anchor", ariaDescription: "ariaDescription", ariaLabel: "ariaLabel", autoUpdateRecord: "autoUpdateRecord", bbar: "bbar", bodyCls: "bodyCls", bubbleEvents: "bubbleEvents", callOnFunctions: "callOnFunctions", centered: "centered", clearable: "clearable", collapsed: "collapsed", collapsible: "collapsible", config: "config", constrainTo: "constrainTo", contentElementCls: "contentElementCls", defaultBindProperty: "defaultBindProperty", defaultFocus: "defaultFocus", defaults: "defaults", dock: "dock", draggable: "draggable", floating: "floating", footer: "footer", header: "header", hideAnimation: "hideAnimation", hideWhenEmpty: "hideWhenEmpty", htmlCls: "htmlCls", ignoreParentReadOnly: "ignoreParentReadOnly", inline: "inline", itemCls: "itemCls", labelCls: "labelCls", labelPosition: "labelPosition", labelWidth: "labelWidth", lazyItems: "lazyItems", listeners: "listeners", localeClass: "localeClass", localizable: "localizable", localizableProperties: "localizableProperties", maskDefaults: "maskDefaults", masked: "masked", monitorResize: "monitorResize", name: "name", namedItems: "namedItems", options: "options", owner: "owner", positioned: "positioned", preventTooltipOnTouch: "preventTooltipOnTouch", relayStoreEvents: "relayStoreEvents", ripple: "ripple", rootElement: "rootElement", scrollAction: "scrollAction", showAnimation: "showAnimation", showTooltipWhenDisabled: "showTooltipWhenDisabled", stateful: "stateful", statefulEvents: "statefulEvents", stateId: "stateId", stateProvider: "stateProvider", strips: "strips", tab: "tab", tag: "tag", tbar: "tbar", textAlign: "textAlign", textContent: "textContent", trapFocus: "trapFocus", ui: "ui", weight: "weight", alignSelf: "alignSelf", appendTo: "appendTo", cls: "cls", content: "content", dataset: "dataset", disabled: "disabled", extraData: "extraData", flex: "flex", height: "height", hidden: "hidden", html: "html", id: "id", insertBefore: "insertBefore", insertFirst: "insertFirst", items: "items", label: "label", layout: "layout", layoutStyle: "layoutStyle", margin: "margin", maxHeight: "maxHeight", maxWidth: "maxWidth", minHeight: "minHeight", minWidth: "minWidth", readOnly: "readOnly", record: "record", scrollable: "scrollable", strictRecordMapping: "strictRecordMapping", title: "title", tools: "tools", tooltip: "tooltip", width: "width", x: "x", y: "y", anchorSize: "anchorSize", isSettingValues: "isSettingValues", isValid: "isValid", state: "state", type: "type", value: "value", values: "values" }, outputs: { onBeforeDestroy: "onBeforeDestroy", onBeforeHide: "onBeforeHide", onBeforeSetRecord: "onBeforeSetRecord", onBeforeShow: "onBeforeShow", onCatchAll: "onCatchAll", onDestroy: "onDestroy", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onHide: "onHide", onPaint: "onPaint", onReadOnly: "onReadOnly", onRecompose: "onRecompose", onResize: "onResize", onShow: "onShow", onToolClick: "onToolClick" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumRadioGroupComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bryntum-radio-group',
                    template: ''
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { adopt: [{
                type: Input
            }], align: [{
                type: Input
            }], anchor: [{
                type: Input
            }], ariaDescription: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], autoUpdateRecord: [{
                type: Input
            }], bbar: [{
                type: Input
            }], bodyCls: [{
                type: Input
            }], bubbleEvents: [{
                type: Input
            }], callOnFunctions: [{
                type: Input
            }], centered: [{
                type: Input
            }], clearable: [{
                type: Input
            }], collapsed: [{
                type: Input
            }], collapsible: [{
                type: Input
            }], config: [{
                type: Input
            }], constrainTo: [{
                type: Input
            }], contentElementCls: [{
                type: Input
            }], defaultBindProperty: [{
                type: Input
            }], defaultFocus: [{
                type: Input
            }], defaults: [{
                type: Input
            }], dock: [{
                type: Input
            }], draggable: [{
                type: Input
            }], floating: [{
                type: Input
            }], footer: [{
                type: Input
            }], header: [{
                type: Input
            }], hideAnimation: [{
                type: Input
            }], hideWhenEmpty: [{
                type: Input
            }], htmlCls: [{
                type: Input
            }], ignoreParentReadOnly: [{
                type: Input
            }], inline: [{
                type: Input
            }], itemCls: [{
                type: Input
            }], labelCls: [{
                type: Input
            }], labelPosition: [{
                type: Input
            }], labelWidth: [{
                type: Input
            }], lazyItems: [{
                type: Input
            }], listeners: [{
                type: Input
            }], localeClass: [{
                type: Input
            }], localizable: [{
                type: Input
            }], localizableProperties: [{
                type: Input
            }], maskDefaults: [{
                type: Input
            }], masked: [{
                type: Input
            }], monitorResize: [{
                type: Input
            }], name: [{
                type: Input
            }], namedItems: [{
                type: Input
            }], options: [{
                type: Input
            }], owner: [{
                type: Input
            }], positioned: [{
                type: Input
            }], preventTooltipOnTouch: [{
                type: Input
            }], relayStoreEvents: [{
                type: Input
            }], ripple: [{
                type: Input
            }], rootElement: [{
                type: Input
            }], scrollAction: [{
                type: Input
            }], showAnimation: [{
                type: Input
            }], showTooltipWhenDisabled: [{
                type: Input
            }], stateful: [{
                type: Input
            }], statefulEvents: [{
                type: Input
            }], stateId: [{
                type: Input
            }], stateProvider: [{
                type: Input
            }], strips: [{
                type: Input
            }], tab: [{
                type: Input
            }], tag: [{
                type: Input
            }], tbar: [{
                type: Input
            }], textAlign: [{
                type: Input
            }], textContent: [{
                type: Input
            }], trapFocus: [{
                type: Input
            }], ui: [{
                type: Input
            }], weight: [{
                type: Input
            }], alignSelf: [{
                type: Input
            }], appendTo: [{
                type: Input
            }], cls: [{
                type: Input
            }], content: [{
                type: Input
            }], dataset: [{
                type: Input
            }], disabled: [{
                type: Input
            }], extraData: [{
                type: Input
            }], flex: [{
                type: Input
            }], height: [{
                type: Input
            }], hidden: [{
                type: Input
            }], html: [{
                type: Input
            }], id: [{
                type: Input
            }], insertBefore: [{
                type: Input
            }], insertFirst: [{
                type: Input
            }], items: [{
                type: Input
            }], label: [{
                type: Input
            }], layout: [{
                type: Input
            }], layoutStyle: [{
                type: Input
            }], margin: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], minHeight: [{
                type: Input
            }], minWidth: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], record: [{
                type: Input
            }], scrollable: [{
                type: Input
            }], strictRecordMapping: [{
                type: Input
            }], title: [{
                type: Input
            }], tools: [{
                type: Input
            }], tooltip: [{
                type: Input
            }], width: [{
                type: Input
            }], x: [{
                type: Input
            }], y: [{
                type: Input
            }], anchorSize: [{
                type: Input
            }], isSettingValues: [{
                type: Input
            }], isValid: [{
                type: Input
            }], state: [{
                type: Input
            }], type: [{
                type: Input
            }], value: [{
                type: Input
            }], values: [{
                type: Input
            }], onBeforeDestroy: [{
                type: Output
            }], onBeforeHide: [{
                type: Output
            }], onBeforeSetRecord: [{
                type: Output
            }], onBeforeShow: [{
                type: Output
            }], onCatchAll: [{
                type: Output
            }], onDestroy: [{
                type: Output
            }], onFocusIn: [{
                type: Output
            }], onFocusOut: [{
                type: Output
            }], onHide: [{
                type: Output
            }], onPaint: [{
                type: Output
            }], onReadOnly: [{
                type: Output
            }], onRecompose: [{
                type: Output
            }], onResize: [{
                type: Output
            }], onShow: [{
                type: Output
            }], onToolClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,